<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="VectorSpace/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,b,k_zero,x,y,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p5,p6,p7,p8,p9">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p11">
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p7">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p7" org.eventb.core.prHyps="p7"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p8">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="p8"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p9">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,b)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                                                <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p6">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p20">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p6"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p21">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,a,b)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(b ↦ x)" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p6">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p23">
                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p6">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p23"/>
                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p25">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,b)" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p8">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p28">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="p8"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p29">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,a,b)" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30">
                                                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for k_times(a ↦ b)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p8">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p31">
                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p6">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p31"/>
                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p33">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x,y,a,b)" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                                                <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
                                                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p35">
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p6">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p39">
                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="p40">
                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p7">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p43">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="p7"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p44">
                                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for k_plus(a ↦ b)" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p7">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p45">
                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p6">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p45"/>
                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p47">
                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p6">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p49">
                                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(b ↦ x)" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p6">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p23">
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(a ↦ x)" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p6">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p50">
                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p23"/>
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p50"/>
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p52">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p5"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p53">
                                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p54">
                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p58">
                                                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_plus(x ↦ y)" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p59">
                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p6">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p59"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p61">
                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p6">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62">
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p63">
                                                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(a ↦ y)" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p6">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p64">
                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(a ↦ x)" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p6">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p50">
                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p5">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p64"/>
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p50"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="x ↦ y∈dom(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="a ↦ vec_plus(x ↦ y)∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="a ↦ scal_times(b ↦ x)∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="a ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="scal_times(b ↦ x)∈E">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="a ↦ y∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="x ↦ y∈E × E">
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="a ↦ b∈dom(k_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="k_unit ↦ x∈K × E">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="scal_times(k_unit ↦ x)=x">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="k_plus(a ↦ b) ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="vec_plus(x ↦ y)∈E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="scal_times(a ↦ x)∈E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈E × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="k_plus(a ↦ b)∈K">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="k_times(a ↦ b) ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="vec_plus∈E × E → E∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)⇒vec_plus∈E × E → E∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="vec_plus∈E × E ⇸ E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="b ↦ x∈K × E">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="k_plus(a ↦ b) ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ(K × E × E)∧vec_zero∈E∧k_plus∈ℙ(K × K × K)∧k_times∈ℙ(K × K × K)∧k_zero∈K∧k_unit∈K⇒(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))⇒vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧(scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="k_times(a ↦ b) ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="a ↦ y∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="a ↦ scal_times(b ↦ x)∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="scal_times(a ↦ y)∈E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈E × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="k_times∈K × K ⇸ K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="a ↦ vec_plus(x ↦ y)∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="a ↦ b∈K × K">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="k_unit ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)⇒vec_plus∈E × E → E∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="a ↦ b∈dom(k_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="b ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀x⦂E,b⦂K·b ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀a⦂K,b⦂K·a ↦ b∈dom(k_times)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="k_times(a ↦ b)∈K">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="k_plus∈K × K ⇸ K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ(K × E × E)∧vec_zero∈E∧k_plus∈ℙ(K × K × K)∧k_times∈ℙ(K × K × K)∧k_zero∈K∧k_unit∈K⇒(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧¬K=(∅ ⦂ ℙ(K))∧Field(k_plus,k_times,k_zero,k_unit)⇒vec_plus∈E × E → E∧¬E=(∅ ⦂ ℙ(E))∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧¬K=(∅ ⦂ ℙ(K))∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧(scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="k_plus∈K × K → K∧k_times∈K × K → K∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,b⦂K·b ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E∧(∀x⦂E,a⦂K,b⦂K·a ↦ scal_times(b ↦ x)∈dom(scal_times))∧(∀a⦂K,b⦂K·a ↦ b∈dom(k_times))∧k_times∈K × K ⇸ K∧(∀x⦂E,a⦂K,b⦂K·k_times(a ↦ b) ↦ x∈dom(scal_times))∧(∀x⦂E,y⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)))))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·⊤∧⊤∧⊤∧⊤∧⊤∧⊤∧⊤⇒(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧¬⊥∧Field(k_plus,k_times,k_zero,k_unit)⇒vec_plus∈E × E → E∧¬⊥∧(AbelianGroup(vec_plus,vec_zero)⇒k_plus∈K × K → K∧k_times∈K × K → K∧¬⊥∧(Field(k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E,y⦂E,a⦂K,b⦂K·⊤∧⊤∧⊤∧⊤⇒b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧(scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)⇒k_unit ↦ x∈dom(scal_times)∧(scal_times(k_unit ↦ x)=x⇒a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧a ↦ x∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧(scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))⇒x ↦ y∈dom(vec_plus)∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧a ↦ y∈dom(scal_times)∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus))))))))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="E × E"/>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="K × K"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm1/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p5,p7,p6,p4"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="VectorSpace expansion on VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p9">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p13">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p13"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18,p19,p20"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p18,p17,p20"/>
                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst x,k_zero,k_zero)" org.eventb.core.prHyps="p19">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p21">
                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p19"/>
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Field expansion on Field(k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p8">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p22">
                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p8"/>
                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p22"/>
                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26,p27"/>
                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Ring expansion on Ring(k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p24">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p28">
                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p24"/>
                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p28"/>
                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31"/>
                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p25,p27,p26,p30,p23,p31"/>
                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AbelianGroup expansion on AbelianGroup(k_plus,k_zero)" org.eventb.core.prHyps="p29">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p32">
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p29"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p32"/>
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
                                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Group expansion on Group(k_plus,k_zero)" org.eventb.core.prHyps="p33">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p35">
                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p33"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p35"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Monoid expansion on Monoid(k_plus,k_zero)" org.eventb.core.prHyps="p36">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p38">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p36"/>
                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p38"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="neutral expansion on neutral(k_plus,k_zero)" org.eventb.core.prHyps="p40">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p41">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p40"/>
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p41"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44"/>
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p34,p39,p37"/>
                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst k_zero)" org.eventb.core.prHyps="p43">
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p45">
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p43"/>
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p44"/>
                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AbelianGroup expansion on AbelianGroup(vec_plus,vec_zero)" org.eventb.core.prHyps="p14">
                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p46">
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p46"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48"/>
                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Group expansion on Group(vec_plus,vec_zero)" org.eventb.core.prHyps="p47">
                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p49">
                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p47"/>
                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p49"/>
                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50,p51"/>
                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Monoid expansion on Monoid(vec_plus,vec_zero)" org.eventb.core.prHyps="p50">
                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p52">
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p50"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p52"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54"/>
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="neutral expansion on neutral(vec_plus,vec_zero)" org.eventb.core.prHyps="p54">
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p12,p55">
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p54"/>
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p55"/>
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p56" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57,p58"/>
                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst scal_times(k_zero ↦ x))" org.eventb.core.prHyps="p58">
                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p5">
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p62">
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p5"/>
                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p60,p62,p63" org.eventb.core.prUnsel="p62,p60">
                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p58"/>
                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p53,p51,p57,p48"/>
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Instantiate Theorem(s)" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p64,p65" org.eventb.core.prUnsel="p65">
                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66,p67"/>
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p66" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70"/>
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p69"/>
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst vec_plus,vec_zero)" org.eventb.core.prHyps="p71">
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p73">
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p74"/>
                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ hyp case (Group(vec_plus,vec_zero)⇒(∀a,b,c·vec_plus(b ↦ a)=vec_plus(c ↦ a)⇔b=c))" org.eventb.core.prHyps="p75">
                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p76">
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p75"/>
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ct in hyps (¬Group(vec_plus,vec_zero))" org.eventb.core.prHyps="p76,p47"/>
                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p77">
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p75"/>
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst scal_times(k_zero ↦ x),vec_zero,scal_times(k_zero ↦ x))" org.eventb.core.prHyps="p77">
                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="p62,p60">
                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78">
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p59,p79" org.eventb.core.prUnsel="p59">
                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p77"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="p60,p62" org.eventb.core.prInfHyps="p78"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p80"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p78"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ct hyp (¬vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x)))" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p81">
                                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p83" org.eventb.core.prHyps="p82">
                                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p81"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=scal_times(k_zero ↦ x)" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p84"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=scal_times(k_plus(k_zero ↦ k_zero) ↦ x)" org.eventb.core.prGoal="p83" org.eventb.core.prHyps="p84">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r18" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p21"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1.1.0"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1,e2,e1"/>
                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e3,e2"/>
                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".string0" org.eventb.core.prSValue="∀op,e·op∈E × E → E∧e∈E∧Group(op,e)⇒(∀a,b,c·a∈E∧b∈E∧c∈E⇒(op(b ↦ a)=op(c ↦ a)⇔b=c))"/>
                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e1"/>
                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.neutral"/>
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.Monoid"/>
                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.Group"/>
                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.AbelianGroup"/>
                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e4"/>
                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.neutral"/>
                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.Monoid"/>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.Group"/>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.AbelianGroup"/>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.Ring"/>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.Field"/>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e5,e4,e4"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="LaSalle_Theory"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Espace Vectoriel"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Espace Vectoriel.VectorSpace"/>
                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀x⦂K·⊤⇒k_plus(x ↦ k_zero)=x∧k_plus(k_zero ↦ x)=x">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="nonZeroInvertible(k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧e∈E⇒¬E=(∅ ⦂ ℙ(E))"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="commutative(k_plus)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Monoid(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="neutral(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="associative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="associative(k_plus)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="⊤∧Group(vec_plus,vec_zero)⇒(∀a⦂E,b⦂E,c⦂E·vec_plus(b ↦ a)=vec_plus(c ↦ a)⇔b=c)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Monoid(k_times,k_unit)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·op(b ↦ a)=op(c ↦ a)⇔b=c)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀op⦂ℙ(E×E×E)·op∈E × E → E∧⊤⇒¬⊥"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧Group(op,e)⇒(∀a⦂E,b⦂E·b ↦ a∈dom(op))∧op∈E × E ⇸ E"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="invertible(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="AbelianGroup(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Group(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x))">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="commutative(k_times)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x))">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K,b⦂K·⊤∧⊤∧⊤∧⊤⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Monoid(vec_plus,vec_zero)∧invertible(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀x⦂K·k_plus(x ↦ k_zero)=x">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧e∈E∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·a∈E∧b∈E∧c∈E⇒(op(b ↦ a)=op(c ↦ a)⇔b=c))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧e∈E∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·a∈E∧b∈E∧c∈E⇒b ↦ a∈dom(op)∧op∈E × E ⇸ E∧c ↦ a∈dom(op))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀x⦂E·x∈E⇒vec_plus(x ↦ vec_zero)=x∧vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x))⇔⊥">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀x⦂E·vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="invertible(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Monoid(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="neutral(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Group(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Group(vec_plus,vec_zero)⇒(∀a⦂E,b⦂E,c⦂E·vec_plus(b ↦ a)=vec_plus(c ↦ a)⇔b=c)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·⊤⇒scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀x⦂E·vec_plus(x ↦ vec_zero)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧⊤∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·⊤∧⊤∧⊤⇒(op(b ↦ a)=op(c ↦ a)⇔b=c))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬scal_times(k_zero ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Ring(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="AbelianGroup(k_plus,k_zero)∧Monoid(k_times,k_unit)∧distributive(k_plus,k_times)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="vec_plus∈E × E → E∧Group(vec_plus,vec_zero)⇒(∀a⦂E,b⦂E,c⦂E·vec_plus(b ↦ a)=vec_plus(c ↦ a)⇔b=c)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Group(vec_plus,vec_zero)∧commutative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="commutative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·op∈E × E → E∧⊤∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·⊤∧⊤∧⊤⇒b ↦ a∈dom(op)∧op∈E × E ⇸ E∧c ↦ a∈dom(op))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀x⦂K·k_plus(k_zero ↦ x)=x">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="k_zero ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="∀op⦂ℙ(E×E×E),e⦂E·(op∈E × E → E∧e∈E⇒E≠(∅ ⦂ ℙ(E)))∧(op∈E × E → E∧e∈E∧Group(op,e)⇒(∀a⦂E,b⦂E,c⦂E·a∈E∧b∈E∧c∈E⇒b ↦ a∈dom(op)∧op∈E × E ⇸ E∧c ↦ a∈dom(op)))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K·scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="integral(k_times,k_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(k_zero ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧commutative(k_times)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬k_zero=k_unit">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Group(k_plus,k_zero)∧commutative(k_plus)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀x⦂E·scal_times(k_zero ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬Group(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀x⦂K·x∈K⇒k_plus(x ↦ k_zero)=x∧k_plus(k_zero ↦ x)=x">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·scal_times(k_zero ↦ x)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="scal_times(k_plus(k_zero ↦ k_zero) ↦ x)=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=vec_plus(scal_times(k_zero ↦ x) ↦ scal_times(k_zero ↦ x))⇔vec_zero=scal_times(k_zero ↦ x)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀a⦂E,b⦂E,c⦂E·vec_plus(b ↦ a)=vec_plus(c ↦ a)⇔b=c">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="associative(k_plus)∧neutral(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀x⦂E·scal_times(k_unit ↦ x)=x">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="associative(vec_plus)∧neutral(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=scal_times(k_plus(k_zero ↦ k_zero) ↦ x)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Monoid(k_plus,k_zero)∧invertible(k_plus,k_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀x⦂E·⊤⇒vec_plus(x ↦ vec_zero)=x∧vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="k_plus(k_zero ↦ k_zero)=k_zero">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="vec_plus(vec_zero ↦ scal_times(k_zero ↦ x))=scal_times(k_zero ↦ x)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="distributive(k_plus,k_times)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="k_zero ↦ x∈K × E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e4" org.eventb.core.expression="k_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e3" org.eventb.core.expression="vec_plus">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="scal_times(k_zero ↦ x)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="vec_zero">
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e5" org.eventb.core.expression="x">
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.allD"/>
        <org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
        <org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.theory.rbp.instantiateTheoremReasoner"/>
        <org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.contrL1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.contrHyps:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r18" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.impCase"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm1/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="k_zero ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·⊤⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂E·k_zero ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="k_zero ↦ x∈K × E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm2/S-THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(a ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm2/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="a ↦ vec_zero∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀a⦂K·a ↦ vec_zero∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a ↦ vec_zero∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm3/S-THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,x)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with scal_times(a ↦ x)=vec_zero" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p14"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p9"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="scal_times(a ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E∧scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,scal_times(a ↦ x),k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="a=k_zero∨x=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·⊤∧⊤∧scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="thm3/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧y≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A∧y≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,x)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="a ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·⊤∧⊤⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀a⦂K,x⦂E·a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="absorbing_k_zero/S-THM" org.eventb.core.confidence="500" org.eventb.core.prFresh="vec_zero,k_unit,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="500" org.eventb.core.prDisplay="rv (500) (scal_times(k_zero ↦ x)=vec_zero)" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·scal_times(k_zero ↦ x)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·⊤⇒scal_times(k_zero ↦ x)=vec_zero)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(k_zero ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀x⦂E·scal_times(k_zero ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.review"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="absorbing_k_zero/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees x)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="k_zero ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·x∈E⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·k_zero ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀x⦂E·⊤⇒k_zero ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀x⦂E·k_zero ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="k_zero ↦ x∈K × E">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="absorbing_vec_zero/S-THM" org.eventb.core.confidence="500" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ah (scal_times(a ↦ vec_zero)=vec_plus(scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero)))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p4"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(a ↦ vec_zero)" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p4">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p18">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for scal_times(a ↦ vec_zero)" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p4">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p18">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p8">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p18"/>
                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p20">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p8"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p16,p17,p20,p13">
                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p4,p16,p17,p20,p7,p5,p13,p8"/>
                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="VectorSpace expansion on VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p9">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p22">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p22"/>
                                                                        <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p23"/>
                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25"/>
                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                                                                                        <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst vec_zero,vec_zero,a)" org.eventb.core.prHyps="p28">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p31">
                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p28"/>
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AbelianGroup expansion on AbelianGroup(vec_plus,vec_zero)" org.eventb.core.prHyps="p24">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p32">
                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p24"/>
                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p32"/>
                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Group expansion on Group(vec_plus,vec_zero)" org.eventb.core.prHyps="p33">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p35">
                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p33"/>
                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p35"/>
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Monoid expansion on Monoid(vec_plus,vec_zero)" org.eventb.core.prHyps="p37">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p38,p15">
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p37"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p38"/>
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="neutral expansion on neutral(vec_plus,vec_zero)" org.eventb.core.prHyps="p40">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p41">
                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p40"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p41"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst vec_zero)" org.eventb.core.prHyps="p44">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p45">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p44"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with scal_times(a ↦ vec_plus(vec_zero ↦ vec_zero))=vec_plus(scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero))" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p31">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with vec_plus(vec_zero ↦ vec_zero)=vec_zero" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="p45">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47">
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p21"/>
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p31"/>
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="">
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e2"/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.neutral"/>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.Monoid"/>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.Group"/>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.AbelianGroup"/>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e2,e2,e3"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="LaSalle_Theory"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Espace Vectoriel"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Espace Vectoriel.VectorSpace"/>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p16,p17,p20,p13,p21">
                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="VectorSpace expansion on VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p9">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p22">
                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p9"/>
                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p22"/>
                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25"/>
                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="AbelianGroup expansion on AbelianGroup(vec_plus,vec_zero)" org.eventb.core.prHyps="p24">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p32">
                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p24"/>
                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p32"/>
                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Group expansion on Group(vec_plus,vec_zero)" org.eventb.core.prHyps="p33">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p35">
                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p33"/>
                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p35"/>
                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Monoid expansion on Monoid(vec_plus,vec_zero)" org.eventb.core.prHyps="p37">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p38,p15">
                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p37"/>
                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p38"/>
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="neutral expansion on neutral(vec_plus,vec_zero)" org.eventb.core.prHyps="p40">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p15,p41">
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p40"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p41"/>
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst scal_times(a ↦ vec_zero))" org.eventb.core.prHyps="p44">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                                                                                                                                                                                        <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p16,p13">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49">
                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p16,p50,p13" org.eventb.core.prUnsel="p16,p13">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p44"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p4,p20,p6,p39,p7,p29,p43,p36,p5,p27,p28,p16,p17,p30,p13,p8,p34"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r16" org.eventb.core.confidence="500" org.eventb.core.prDisplay="rv (500) (scal_times(a ↦ vec_zero)=vec_zero)" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p21,p50"/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e4"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.neutral"/>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Monoid"/>
                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Monoid.Monoid"/>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.Group"/>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Group"/>
                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Group.AbelianGroup"/>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="LaSalle_Theory"/>
                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Espace Vectoriel"/>
                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Espace Vectoriel.VectorSpace"/>
                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prPredRef name=".pred" org.eventb.core.prRef="p21"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="associative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="scal_times(a ↦ vec_plus(vec_zero ↦ vec_zero))=vec_plus(scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="vec_plus(vec_zero ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K,b⦂K·⊤∧⊤∧⊤∧⊤⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Monoid(vec_plus,vec_zero)∧invertible(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀x⦂E·x∈E⇒vec_plus(x ↦ vec_zero)=x∧vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="∀x⦂E·vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="invertible(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Monoid(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="neutral(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="scal_times(a ↦ vec_zero)∈E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="AbelianGroup(vec_plus,vec_zero)∧⊤∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Group(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="∀x⦂E·vec_plus(x ↦ vec_zero)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="a ↦ vec_zero∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="scal_times(a ↦ vec_zero)=scal_times(a ↦ vec_plus(vec_zero ↦ vec_zero))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Group(vec_plus,vec_zero)∧commutative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="commutative(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(a ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="vec_plus∈E × E ⇸ E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K·scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="vec_plus(scal_times(a ↦ vec_zero) ↦ vec_zero)=scal_times(a ↦ vec_zero)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="scal_times(a ↦ vec_zero)=scal_times(a ↦ vec_zero)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="scal_times(a ↦ vec_zero)=vec_plus(scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀x⦂E·scal_times(k_unit ↦ x)=x">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero)∈E × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="associative(vec_plus)∧neutral(vec_plus,vec_zero)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="∀x⦂E·⊤⇒vec_plus(x ↦ vec_zero)=x∧vec_plus(vec_zero ↦ x)=x">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="scal_times(a ↦ vec_zero) ↦ scal_times(a ↦ vec_zero)∈dom(vec_plus)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a ↦ vec_zero∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e3" org.eventb.core.expression="a">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e4" org.eventb.core.expression="scal_times(a ↦ vec_zero)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="E × E"/>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="vec_zero">
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.allD"/>
        <org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.review"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.cut"/>
        <org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="absorbing_vec_zero/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="a ↦ vec_zero∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀a⦂K·a ↦ vec_zero∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a ↦ vec_zero∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="zero_decidability/S-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,x,y,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9">
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,x)" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with scal_times(a ↦ x)=vec_zero" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p12">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p14"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p6"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Field expansion on Field(k_plus,k_times,k_zero,k_unit)" org.eventb.core.prHyps="p7">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p16,p17">
                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p7"/>
                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p17"/>
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p16"/>
                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19,p20,p21,p22"/>
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="nonZeroInvertible expansion on nonZeroInvertible(k_times,k_zero,k_unit)" org.eventb.core.prHyps="p19">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p16,p23">
                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p19"/>
                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p23"/>
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ to ⇒ in goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p16"/>
                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26"/>
                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p28">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst a)" org.eventb.core.prHyps="p27">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p30">
                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p27"/>
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p31"/>
                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                                                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∃ hyp (∃y·¬y=k_zero∧k_times(a ↦ y)=k_unit∧k_times(y ↦ a)=k_unit)" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34,p35">
                                                                                                                                                                    <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
                                                                                                                                                                </org.eventb.core.prHypAction>
                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p33,p34,p35"/>
                                                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with k_times(a ↦ y)=k_unit" org.eventb.core.prHyps="p34">
                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p36"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p37"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p38"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p39"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p18,p14,p21,p35"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="VectorSpace expansion on VectorSpace(vec_plus,scal_times,scal_times(a ↦ x),k_plus,k_times,k_zero,k_times(a ↦ y))" org.eventb.core.prHyps="p36">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41">
                                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p8">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
                                                                                                                                                                                                <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p8"/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p45">
                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p4">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p47">
                                                                                                                                                                                                <org.eventb.core.prRule name="r13" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p4"/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p40,p48">
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p40"/>
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p36"/>
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p48"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p45,p44,p42"/>
                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50,p51"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p49" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54,p55,p56"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst x)" org.eventb.core.prHyps="p55">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p57">
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p55"/>
                                                                                                                                                                                                                <org.eventb.core.prRule name="r14" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="lae in goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p57">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with k_times(y ↦ a)=k_times(a ↦ y)" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p39">
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p59"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p60"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p61"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p57" org.eventb.core.prInfHyps="p62"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p38,p50,p37,p34,p57"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT5" org.eventb.core.prHyps="p35"/>
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r15" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p4,p8,p39,p12,p5,p20,p59,p62,p33,p35,p47,p61,p51,p45,p44,p22,p28,p60,p9,p42"/>
                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst x,y,a)" org.eventb.core.prHyps="p53">
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p64">
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p53"/>
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with scal_times(y ↦ scal_times(a ↦ x))=scal_times(k_times(y ↦ a) ↦ x)" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p64">
                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r16" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with scal_times(a ↦ x)=vec_zero" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p12">
                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p64" org.eventb.core.prInfHyps="p66"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p64"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r17" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Instantiate Theorem(s)" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p68,p69" org.eventb.core.prUnsel="p69">
                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p69" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p70,p71"/>
                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p68" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72"/>
                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p71" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p73"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p74" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p76"/>
                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst vec_plus,scal_times,vec_zero,k_plus,_,_,_)" org.eventb.core.prHyps="p75">
                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p77">
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p75"/>
                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p77" org.eventb.core.prHyps="p4,p5,p9" org.eventb.core.prInfHyps="p78"/>
                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p78" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79"/>
                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst k_times,k_zero,k_unit)" org.eventb.core.prHyps="p79">
                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p80">
                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p79"/>
                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p80" org.eventb.core.prHyps="p8,p6" org.eventb.core.prInfHyps="p81"/>
                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p81" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Field expansion on Field(k_plus,k_times,k_zero,k_unit)⇒(∀a·scal_times(a ↦ vec_zero)=vec_zero)" org.eventb.core.prHyps="p82">
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p83,p16">
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16"/>
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p82"/>
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p83"/>
                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p83" org.eventb.core.prHyps="p18,p20,p22" org.eventb.core.prInfHyps="p84"/>
                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p16"/>
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p84" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p85" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p86"/>
                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p86" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="nonZeroInvertible expansion on nonZeroInvertible(k_times,k_zero,k_unit)⇒(∀a·scal_times(a ↦ vec_zero)=vec_zero)" org.eventb.core.prHyps="p87">
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p88,p16">
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p16"/>
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p87"/>
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p88"/>
                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p16"/>
                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p88" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p89" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p90" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p91"/>
                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p91" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p92"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p92" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p93"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p79" org.eventb.core.prHyps="p93" org.eventb.core.prInfHyps="p94"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p94"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ hyp (inst y)" org.eventb.core.prHyps="p93">
                                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p67">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p93"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r18" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p67"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e2"/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.nonZeroInvertible"/>
                                                                                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.Field"/>
                                                                                                                                                                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e3,e4,e5"/>
                                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                                    <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e6,e7,e8,e9,,,"/>
                                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                                    <org.eventb.core.prString name=".string0" org.eventb.core.prSValue="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
                                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e10,e2,e11"/>
                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e10"/>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="LaSalle_Theory"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Espace Vectoriel"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Espace Vectoriel.VectorSpace"/>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prExprRef name=".exprs" org.eventb.core.prRef="e11"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.nonZeroInvertible"/>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                    <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Ring"/>
                                                                    <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Ring.Field"/>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="nonZeroInvertible(k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧commutative(k_times)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="a ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀x⦂K·x∈K∧¬x=k_zero⇒((∀y⦂K·y∈K)⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit))">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="scal_times(a ↦ x)=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬a=k_zero⇒(∃y⦂K·¬y=k_zero∧k_times(a ↦ y)=k_unit∧k_times(y ↦ a)=k_unit)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="¬⊥∧nonZeroInvertible(k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="∀k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·⊤∧⊤∧⊤∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="∀x⦂E,y0⦂E,a0⦂K,b⦂K·x∈E∧y0∈E∧a0∈K∧b∈K⇒scal_times(a0 ↦ scal_times(b ↦ x))=scal_times(k_times(a0 ↦ b) ↦ x)∧scal_times(k_times(a ↦ y) ↦ x)=x∧scal_times(k_plus(a0 ↦ b) ↦ x)=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a0 ↦ vec_plus(x ↦ y0))=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(a0 ↦ y0))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="scal_times(k_times(y ↦ a) ↦ x)=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="commutative(k_times)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬k_zero=k_times(a ↦ y)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬k_zero=k_times(y ↦ a)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·⊤⇒scal_times(a ↦ vec_zero)=vec_zero)"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="∀k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="∀k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·⊤∧⊤∧scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="∀x⦂E,y0⦂E,a0⦂K,b⦂K·⊤∧⊤∧⊤∧⊤⇒scal_times(a0 ↦ scal_times(b ↦ x))=scal_times(k_times(a0 ↦ b) ↦ x)∧scal_times(k_times(a ↦ y) ↦ x)=x∧scal_times(k_plus(a0 ↦ b) ↦ x)=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a0 ↦ vec_plus(x ↦ y0))=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(a0 ↦ y0))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀x⦂K·⊤∧¬x=k_zero⇒(⊤⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit))">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="a ↦ y∈dom(k_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="∀x⦂E·scal_times(k_times(a ↦ y) ↦ x)=x">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,scal_times(a ↦ x),k_plus,k_times,k_zero,k_times(a ↦ y))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="x=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="⊤∧Field(k_plus,k_times,k_zero,k_unit)∧⊤⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="a ↦ y∈K × K">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="scal_times(k_times(y ↦ a) ↦ x)=x">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="a=k_zero∨x=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,scal_times(a ↦ x),k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_times(a ↦ y))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_times(y ↦ a))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="AbelianGroup(vec_plus,scal_times(a ↦ x))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="scal_times(k_times(a ↦ y) ↦ x)=x">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Ring(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="scal_times(y ↦ scal_times(a ↦ x))=scal_times(k_times(y ↦ a) ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="AbelianGroup(vec_plus,scal_times(a ↦ x))∧Field(k_plus,k_times,k_zero,k_times(a ↦ y))∧(∀x⦂E,y0⦂E,a0⦂K,b⦂K·x∈E∧y0∈E∧a0∈K∧b∈K⇒scal_times(a0 ↦ scal_times(b ↦ x))=scal_times(k_times(a0 ↦ b) ↦ x)∧scal_times(k_times(a ↦ y) ↦ x)=x∧scal_times(k_plus(a0 ↦ b) ↦ x)=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a0 ↦ vec_plus(x ↦ y0))=vec_plus(scal_times(a0 ↦ x) ↦ scal_times(a0 ↦ y0)))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="integral(k_times,k_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∀x⦂E,y⦂E,a⦂K·scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y))">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧commutative(k_times)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬k_zero=k_unit">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Ring(k_plus,k_times,k_zero,k_times(a ↦ y))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Ring(k_plus,k_times,k_zero,k_times(y ↦ a))">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E∧scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="⊤⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬y=k_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="(∀x⦂K·¬x=k_zero⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit))⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="scal_times(y ↦ vec_zero)=vec_zero">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="a ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="k_times∈K × K ⇸ K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="∀x⦂E,a⦂K,b⦂K·scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬⊥⇒(∃y⦂K·¬y=k_zero∧k_times(a ↦ y)=k_unit∧k_times(y ↦ a)=k_unit)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="¬k_zero=k_unit∧nonZeroInvertible(k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="(∀x⦂K·x∈K∧x≠k_zero⇒(∃y⦂K·y∈K⇒y≠k_zero∧(k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit)))⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="(∀x⦂K·x∈K∧¬x=k_zero⇒((∀y⦂K·y∈K)⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit)))⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀x⦂K·¬x=k_zero⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·scal_times(a ↦ x)=vec_zero⇒a=k_zero∨x=vec_zero)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="scal_times(y ↦ scal_times(a ↦ x))=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="k_times(y ↦ a)=k_times(a ↦ y)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃y⦂K·¬y=k_zero∧k_times(a ↦ y)=k_unit∧k_times(y ↦ a)=k_unit">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="k_times(a ↦ y)=k_unit">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="k_times(y ↦ a)=k_unit">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a∈K⇒a ↦ vec_zero∈dom(scal_times)∧scal_times∈K × E ⇸ E)"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="k_zero≠k_unit∧⊤∧nonZeroInvertible(k_times,k_zero,k_unit)∧⊤∧⊤⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="nonZeroInvertible(k_times,k_zero,k_unit)⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K·a ↦ vec_zero∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="(a ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K)∧⊤∧(a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="(∀x⦂K·⊤∧¬x=k_zero⇒(⊤⇒(∃y⦂K·¬y=k_zero∧k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit)))⇒(∀a⦂K·scal_times(a ↦ vec_zero)=vec_zero)">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬a=k_zero">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="scal_times(y ↦ vec_zero)=scal_times(k_times(y ↦ a) ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="∀k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒⊤">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬a=k_zero⇒x=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="scal_times(k_times(a ↦ y) ↦ x)=scal_times(a ↦ x)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀x⦂K·x∈K∧x≠k_zero⇒(∃y⦂K·y∈K⇒y≠k_zero∧(k_times(x ↦ y)=k_unit∧k_times(y ↦ x)=k_unit))">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e5" org.eventb.core.expression="k_unit">
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e11" org.eventb.core.expression="a">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e4" org.eventb.core.expression="k_zero">
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e6" org.eventb.core.expression="vec_plus">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e8" org.eventb.core.expression="vec_zero">
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e7" org.eventb.core.expression="scal_times">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e10" org.eventb.core.expression="x">
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="y">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="K"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × K"/>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prExpr name="e3" org.eventb.core.expression="k_times">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prExpr name="e9" org.eventb.core.expression="k_plus">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prExpr>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.exF"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r13" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.allD"/>
        <org.eventb.core.prReas name="r18" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r15" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r14" org.eventb.core.prRID="org.eventb.core.seqprover.locEq"/>
        <org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r16" org.eventb.core.prRID="org.eventb.core.seqprover.eq:1"/>
        <org.eventb.core.prReas name="r17" org.eventb.core.prRID="org.eventb.theory.rbp.instantiateTheoremReasoner"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.he:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.disjToImplRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="zero_decidability/WD-THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,k_unit,a,k_zero,x,k_times,vec_plus,scal_times,k_plus" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E,K">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
                                        <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
                                        <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees a,x)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
                                                                <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps=""/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒K≠(∅ ⦂ ℙ(K)))∧(vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="scal_times∈K × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="a ↦ x∈K × E">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Field(k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="k_times∈K × K → K">
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="k_plus∈K × K → K">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K)·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤⇒¬⊥)∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧⊤∧⊤∧⊤∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·⊤∧⊤⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="k_plus" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_times" org.eventb.core.type="ℙ(K×K×K)"/>
            <org.eventb.core.prIdent name="k_unit" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="k_zero" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="(∀a⦂K,x⦂E·a ↦ x∈dom(scal_times))∧scal_times∈K × E ⇸ E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="K"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
            <org.eventb.core.prIdent name="x" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀a⦂K,x⦂E·a ↦ x∈dom(scal_times)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(K×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K⇒¬K=(∅ ⦂ ℙ(K)))∧(∀vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(K×E×E),vec_zero⦂E,k_plus⦂ℙ(K×K×K),k_times⦂ℙ(K×K×K),k_zero⦂K,k_unit⦂K·vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧vec_zero∈E∧k_zero∈K∧k_unit∈K∧Field(k_plus,k_times,k_zero,k_unit)∧VectorSpace(vec_plus,scal_times,vec_zero,k_plus,k_times,k_zero,k_unit)⇒(∀a⦂K,x⦂E·a∈K∧x∈E⇒a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="K × E"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
