<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="Stable/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,vec_uminus,t,delta,eps,y,z,vec_plus,scal_times,eq,N" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeperate" org.eventb.core.label="isSeperate" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀u⦂E·¬u∈E∨(u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(u)=(Rzero ⦂ RReal))∨u=vec_zero)∨(∃u⦂E·u∈E∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u)=(Rzero ⦂ RReal)∧¬u=vec_zero)">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀u⦂E·u∈E∧N(u)=(Rzero ⦂ RReal)⇒u=vec_zero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isHomogeneous" org.eventb.core.label="isHomogeneous" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀a⦂RReal,u⦂E·¬a∈(RReal ⦂ ℙ(RReal))∨¬u∈E∨(a ↦ u∈dom(scal_times)∧scal_times∈(RReal ⦂ ℙ(RReal)) × E ⇸ E∧scal_times(a ↦ u)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧a∈dom(abs ⦂ ℙ(RReal×RReal))∧(abs ⦂ ℙ(RReal×RReal))∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u))))∨(∃a⦂RReal,u⦂E·a∈(RReal ⦂ ℙ(RReal))∧u∈E∧a ↦ u∈dom(scal_times)∧scal_times∈(RReal ⦂ ℙ(RReal)) × E ⇸ E∧scal_times(a ↦ u)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧a∈dom(abs ⦂ ℙ(RReal×RReal))∧(abs ⦂ ℙ(RReal×RReal))∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)))">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀a⦂RReal,u⦂E·a∈(RReal ⦂ ℙ(RReal))∧u∈E⇒N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isInegTriang" org.eventb.core.label="isInegTriang" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀u⦂E,v⦂E·¬u∈E∨¬v∈E∨(u ↦ v∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(u ↦ v)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧v∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u) ↦ N(v)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal))))∨(∃u⦂E,v⦂E·u∈E∧v∈E∧u ↦ v∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(u ↦ v)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧v∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u) ↦ N(v)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀u⦂E,v⦂E·u∈E∧v∈E⇒N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNorm" org.eventb.core.label="isNorm" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(isSeperate(N,vec_plus,scal_times,vec_zero)∧isHomogeneous(N,vec_plus,scal_times,vec_zero)∧isInegTriang(N,vec_plus,scal_times,vec_zero))∨¬isSeperate(N,vec_plus,scal_times,vec_zero)∨¬isHomogeneous(N,vec_plus,scal_times,vec_zero)∨¬isInegTriang(N,vec_plus,scal_times,vec_zero)">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="/" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#\/" org.eventb.theory.core.formula="isSeperate(N,vec_plus,scal_times,vec_zero)∧isHomogeneous(N,vec_plus,scal_times,vec_zero)∧isInegTriang(N,vec_plus,scal_times,vec_zero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Infinity2Open" org.eventb.core.label="Infinity2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Infinity2Closed" org.eventb.core.label="Infinity2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Infinity" org.eventb.core.label="Open2Infinity" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Infinity" org.eventb.core.label="Closed2Infinity" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Open" org.eventb.core.label="Open2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Closed" org.eventb.core.label="Open2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(leq ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Open" org.eventb.core.label="Closed2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Closed" org.eventb.core.label="Closed2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(leq ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bind" org.eventb.core.label="bind" org.eventb.core.predicate="fab∈E ⇸ F∧gac∈E ⇸ G∧dom(fab)=dom(gac)" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×(F×G))" org.eventb.theory.core.wd="∀x⦂E·x∈dom(fab)⇒x∈dom(fab)∧fab∈E ⇸ F∧x∈dom(gac)∧gac∈E ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="gac" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(E×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="λx⦂E·x∈dom(fab) ∣ fab(x) ↦ gac(x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fproj1" org.eventb.core.label="fproj1" org.eventb.core.predicate="fa_bc∈E ⇸ F × G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F)" org.eventb.theory.core.wd="∀x⦂F,y⦂G·(x∈F∧y∈G)∨¬x∈F∨¬y∈G">
                <org.eventb.theory.core.scOperatorArgument name="fa_bc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×(F×G))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="(λx⦂F ↦ y⦂G·x∈F∧y∈G ∣ x)∘fa_bc"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fproj2" org.eventb.core.label="fproj2" org.eventb.core.predicate="fa_bc∈E ⇸ F × G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀x⦂F,y⦂G·(x∈F∧y∈G)∨¬x∈F∨¬y∈G">
                <org.eventb.theory.core.scOperatorArgument name="fa_bc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×(F×G))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="(λx⦂F ↦ y⦂G·x∈F∧y∈G ∣ y)∘fa_bc"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfplus" org.eventb.core.label="Rfplus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×RReal)×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀rf⦂ℙ(RReal×RReal),rg⦂ℙ(RReal×RReal)·((rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∨¬rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧x∈dom(rg)∧rg∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧rf(x) ↦ rg(x)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λrf⦂ℙ(RReal×RReal) ↦ rg⦂ℙ(RReal×RReal)·rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (plus ⦂ ℙ(RReal×RReal×RReal))(rf(x) ↦ rg(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rftimes" org.eventb.core.label="Rftimes" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×RReal)×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀rf⦂ℙ(RReal×RReal),rg⦂ℙ(RReal×RReal)·((rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∨¬rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧x∈dom(rg)∧rg∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧rf(x) ↦ rg(x)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λrf⦂ℙ(RReal×RReal) ↦ rg⦂ℙ(RReal×RReal)·rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (times ⦂ ℙ(RReal×RReal×RReal))(rf(x) ↦ rg(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfscal" org.eventb.core.label="Rfscal" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀l⦂RReal,rf⦂ℙ(RReal×RReal)·((l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬l∈(RReal ⦂ ℙ(RReal))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧l ↦ rf(x)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λl⦂RReal ↦ rf⦂ℙ(RReal×RReal)·l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (times ⦂ ℙ(RReal×RReal×RReal))(l ↦ rf(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfcste" org.eventb.core.label="Rfcste" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ l"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partial1" org.eventb.core.label="partial1" org.eventb.core.predicate="fab_c∈E × F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀x⦂E·x ↦ y∈dom(fab_c)⇒x ↦ y∈dom(fab_c)∧fab_c∈E × F ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab_c" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="F"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂E·x ↦ y∈dom(fab_c) ∣ fab_c(x ↦ y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partial2" org.eventb.core.label="partial2" org.eventb.core.predicate="fab_c∈E × F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(F×G)" org.eventb.theory.core.wd="∀y⦂F·x ↦ y∈dom(fab_c)⇒x ↦ y∈dom(fab_c)∧fab_c∈E × F ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab_c" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λy⦂F·x ↦ y∈dom(fab_c) ∣ fab_c(x ↦ y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partialComp" org.eventb.core.label="partialComp" org.eventb.core.predicate="fabb∈E × F ⇸ G∧gab∈E ⇸ F" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀t⦂E·((t∈dom(gab)∧t∈dom(gab)∧gab∈E ⇸ F∧t ↦ gab(t)∈dom(fabb))∨¬t∈dom(gab)∨(t∈dom(gab)∧gab∈E ⇸ F∧¬t ↦ gab(t)∈dom(fabb)))∧(t∈dom(gab)∧t ↦ gab(t)∈dom(fabb)⇒t∈dom(gab)∧gab∈E ⇸ F∧t ↦ gab(t)∈dom(fabb)∧fabb∈E × F ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="fabb" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="gab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λt⦂E·t∈dom(gab)∧t ↦ gab(t)∈dom(fabb) ∣ fabb(t ↦ gab(t))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="unpartialize1" org.eventb.core.label="unpartialize1" org.eventb.core.predicate="fbc∈F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F×G)" org.eventb.theory.core.wd="∀x⦂E,y⦂F·((x∈A∧y∈dom(fbc))∨¬x∈A∨¬y∈dom(fbc))∧(x∈A∧y∈dom(fbc)⇒y∈dom(fbc)∧fbc∈F ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="fbc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(F×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="λx⦂E ↦ y⦂F·x∈A∧y∈dom(fbc) ∣ fbc(y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="unpartialize2" org.eventb.core.label="unpartialize2" org.eventb.core.predicate="fac∈E ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F×G)" org.eventb.theory.core.wd="∀x⦂E,y⦂F·((x∈dom(fac)∧y∈B)∨¬x∈dom(fac)∨¬y∈B)∧(x∈dom(fac)∧y∈B⇒x∈dom(fac)∧fac∈E ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fac" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="λx⦂E ↦ y⦂F·x∈dom(fac)∧y∈B ∣ fac(x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="increasing" org.eventb.core.label="increasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(leq ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyIncreasing" org.eventb.core.label="strictlyIncreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(lt ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="decreasing" org.eventb.core.label="decreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(leq ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyDecreasing" org.eventb.core.label="strictlyDecreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(lt ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="constant" org.eventb.core.label="constant" org.eventb.core.predicate="fa∈A → F" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(∀y⦂E·¬y∈A∨(x∈dom(fa)∧fa∈E ⇸ F∧y∈dom(fa)∧fa∈E ⇸ F∧fa(x)=fa(y))))∨(∃x⦂E·x∈A∧(∃y⦂E·y∈A∧x∈dom(fa)∧fa∈E ⇸ F∧y∈dom(fa)∧fa∈E ⇸ F∧¬fa(x)=fa(y)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(∀y⦂E·y∈A⇒fa(x)=fa(y))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="positive" org.eventb.core.label="positive" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyPositive" org.eventb.core.label="strictlyPositive" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="negative" org.eventb.core.label="negative" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyNegative" org.eventb.core.label="strictlyNegative" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="application" org.eventb.core.label="application" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F)×E×F)" org.eventb.theory.core.wd="∀f_⦂ℙ(E×F),e_⦂E·((f_∈E ⇸ F∧e_∈dom(f_))∨¬f_∈E ⇸ F∨¬e_∈dom(f_))∧(f_∈E ⇸ F∧e_∈dom(f_)⇒e_∈dom(f_)∧f_∈E ⇸ F)">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4;|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λf_⦂ℙ(E×F) ↦ e_⦂E·f_∈E ⇸ F∧e_∈dom(f_) ∣ f_(e_)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="until" org.eventb.core.label="until" org.eventb.core.predicate="fre∈(RReal ⦂ ℙ(RReal)) ⇸ E∧gre∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(start ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧Closed2Open(start,t0)⊆dom(fre)∧Closed2Infinity(t0)⊆dom(gre))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×E)" org.eventb.theory.core.wd="∀t⦂RReal·(start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ t0∈(lt ⦂ ℙ(RReal×RReal)))∨¬start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ t0∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="start" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fre" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="t0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="gre" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="(Closed2Open(start,t0) ◁ fre)∪(Closed2Infinity(t0) ◁ gre)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="untilF" org.eventb.core.label="untilF" org.eventb.core.predicate="fref∈(RReal ⦂ ℙ(RReal)) × E ⇸ F∧gref∈(RReal ⦂ ℙ(RReal)) × E ⇸ F∧(start ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧Closed2Open(start,t0) × (∅ ⦂ ℙ(E))⊆dom(fref)∧Closed2Infinity(t0) × (∅ ⦂ ℙ(E))⊆dom(gref))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×E×F)" org.eventb.theory.core.wd="∀t⦂RReal·(start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ t0∈(lt ⦂ ℙ(RReal×RReal)))∨¬start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ t0∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="start" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fref" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="t0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="gref" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="((Closed2Open(start,t0) × E) ◁ fref)∪((Closed2Infinity(t0) × E) ◁ gref)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fcste" org.eventb.core.label="fcste" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="v" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="F"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂E·x∈A ∣ v"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="boundedBy" org.eventb.core.label="boundedBy" org.eventb.core.predicate="far∈E ⇸ (RReal ⦂ ℙ(RReal))∧A⊆dom(far)" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x_⦂E·¬x_∈A∨(x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal))∧x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal))))∨(∃x_⦂E·x_∈A∧((x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal)))∨(x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="fmin" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fmax" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x_⦂E·x_∈A⇒fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal))∧far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="C0" org.eventb.core.label="C0" org.eventb.core.predicate="A≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F))" org.eventb.theory.core.wd="A≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="D1" org.eventb.core.label="D1" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×F))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Cn" org.eventb.core.label="Cn" org.eventb.core.predicate="n∈ℕ" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F))" org.eventb.theory.core.wd="n∈ℕ">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Dn" org.eventb.core.label="Dn" org.eventb.core.predicate="n∈ℕ∧n&gt;0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×F))" org.eventb.theory.core.wd="n∈ℕ∧n&gt;0">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Der" org.eventb.core.label="Der" org.eventb.core.predicate="fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(fa2b∈D1(A2,B)∧A2⊆dom(fa2b))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×F)" org.eventb.theory.core.wd="fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(fa2b∈D1(A2,B)∧A2⊆dom(fa2b))">
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa2b" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Dern" org.eventb.core.label="Dern" org.eventb.core.predicate="n∈ℕ∧fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(n&gt;0∧A2⊆dom(fa2b))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×F)" org.eventb.theory.core.wd="n∈ℕ∧fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(n&gt;0∧A2⊆dom(fa2b))">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa2b" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lipschitzContinuous" org.eventb.core.label="lipschitzContinuous" org.eventb.core.predicate="fab∈A → B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="fab∈A → B">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="kLipschitzContinuous" org.eventb.core.label="kLipschitzContinuous" org.eventb.core.predicate="fab∈A → B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="fab∈A → B">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element2" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element3" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="r" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="pi" org.eventb.core.label="pi" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sin" org.eventb.core.label="sin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="cos" org.eventb.core.label="cos" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="partitionS" org.eventb.core.label="partitionS" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="((∀X1⦂ℙ(E),X2⦂ℙ(E)·¬X1∈Xs∨¬X2∈Xs∨¬X1≠X2∨X1∩X2=(∅ ⦂ ℙ(E)))∧union(Xs)=X)∨(∃X1⦂ℙ(E),X2⦂ℙ(E)·X1∈Xs∧X2∈Xs∧X1≠X2∧¬X1∩X2=(∅ ⦂ ℙ(E)))∨¬union(Xs)=X">
                <org.eventb.theory.core.scOperatorArgument name="X" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="Xs" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="(∀X1⦂ℙ(E),X2⦂ℙ(E)·X1∈Xs∧X2∈Xs∧X1≠X2⇒X1∩X2=(∅ ⦂ ℙ(E)))∧union(Xs)=X"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="piecewiseContinuous" org.eventb.core.label="piecewiseContinuous" org.eventb.core.predicate="f∈union(Ix) → B∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))∧I0 ◁ f∈C0(I0,B)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))∧¬I0 ◁ f∈C0(I0,B))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒I0 ◁ f∈C0(I0,B)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partialPiecewiseContinuous" org.eventb.core.label="partialPiecewiseContinuous" org.eventb.core.predicate="g∈union(Ix) × B → C∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0 × B≠(∅ ⦂ ℙ(E×F))∧C≠(∅ ⦂ ℙ(G))∧(I0 × B) ◁ g∈C0(I0 × B,C)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0 × B≠(∅ ⦂ ℙ(E×F))∧C≠(∅ ⦂ ℙ(G))∧¬(I0 × B) ◁ g∈C0(I0 × B,C))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="C" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(G)"/>
                <org.eventb.theory.core.scOperatorArgument name="g" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒(I0 × B) ◁ g∈C0(I0 × B,C)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="piecewiseLipschitzContinuous" org.eventb.core.label="piecewiseLipschitzContinuous" org.eventb.core.predicate="f∈union(Ix) → B∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0 ◁ f∈I0 → B∧lipschitzContinuous(I0,B,I0 ◁ f)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0 ◁ f∈I0 → B∧¬lipschitzContinuous(I0,B,I0 ◁ f))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒lipschitzContinuous(I0,B,I0 ◁ f)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="DE">
                <org.eventb.theory.core.scTypeArgument name="F" org.eventb.theory.core.givenType="F"/>
                <org.eventb.theory.core.scDatatypeConstructor name="ode">
                    <org.eventb.theory.core.scConstructorArgument name="fun" org.eventb.core.type="ℙ(RReal×F×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="initial" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="initialArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="aode">
                    <org.eventb.theory.core.scConstructorArgument name="afun" org.eventb.core.type="ℙ(F×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="ainit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="ainitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="CDE">
                <org.eventb.theory.core.scTypeArgument name="F" org.eventb.theory.core.givenType="F"/>
                <org.eventb.theory.core.scTypeArgument name="UF" org.eventb.theory.core.givenType="UF"/>
                <org.eventb.theory.core.scDatatypeConstructor name="code">
                    <org.eventb.theory.core.scConstructorArgument name="cfun" org.eventb.core.type="ℙ(RReal×F×UF×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="cinit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="cinitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="caode">
                    <org.eventb.theory.core.scConstructorArgument name="cafun" org.eventb.core.type="ℙ(F×UF×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="cainit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="cainitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="autonomousToODE" org.eventb.core.label="autonomousToODE" org.eventb.core.predicate="∃f⦂ℙ(F×F),i⦂F,ia⦂RReal·f∈F ⇸ F∧i∈F∧ia∈(RReal ⦂ ℙ(RReal))∧e=aode(f,i,ia)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="(∀t_⦂RReal,eta_⦂F·((t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e)))∨¬t_∈(RReal ⦂ ℙ(RReal))∨¬eta_∈F∨((∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧¬eta_∈dom(afun(e))))∧(t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e))⇒(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e))∧afun(e)∈F ⇸ F))∧(∃fun0⦂ℙ(RReal×F×F),initial1⦂F,initialArg2⦂RReal·e=ode(fun0,initial1,initialArg2))">
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e)) ∣ afun(e)(eta_),initial(e),initialArg(e))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="solutionOf" org.eventb.core.label="solutionOf" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(eta)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=partialComp(fu,eta)∧eta(initArg)=init"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=fu∘eta∧eta(initArg)=init"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CauchyLipschitzCondition" org.eventb.core.label="CauchyLipschitzCondition" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(DR × DF,F)∧(∀t0⦂RReal·t0∈DR⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(F,F)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="PiecewiseCauchyLipschitzCondition" org.eventb.core.label="PiecewiseCauchyLipschitzCondition" org.eventb.core.predicate="DRs≠(∅ ⦂ ℙ(ℙ(RReal)))∧(∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal)·DR1∈DRs∧DR2∈DRs∧DR1≠DR2⇒DR1∩DR2=(∅ ⦂ ℙ(RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DRs" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(RReal))"/>
                <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#," org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧partialPiecewiseContinuous(DRs,DF,DF,fu)∧(∀t0⦂RReal·t0∈union(DRs)⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧fu∈C0(F,F)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Solvable" org.eventb.core.label="Solvable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq))∨(∀x⦂ℙ(RReal×F)·¬x∈(RReal ⦂ ℙ(RReal)) ⇸ F∨¬DR⊆dom(x)∨¬solutionOf(DR,x,eq))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AppendSolutionBAP" org.eventb.core.label="AppendSolutionBAP" org.eventb.core.predicate="A∈ℙ(DR)∧B∈ℙ(DR)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧(A∩B=(∅ ⦂ ℙ(RReal))∧Solvable(B,eq)∧DR⊆dom(eta))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq))∨¬DR⊆dom(etap)∨¬A ◁ etap=A ◁ eta∨¬solutionOf(B,B ◁ etap,eq)">
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CBAP" org.eventb.core.label="CBAP" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Pred∈ℙ(((RRealPlus ⦂ ℙ(RReal)) ⇸ F) × ((RRealPlus ⦂ ℙ(RReal)) ⇸ F))∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨¬t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred)∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Pred" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(ℙ(RReal×F)×ℙ(RReal×F))"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CBAPsolutionOf" org.eventb.core.label="CBAPsolutionOf" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap)∧Solvable(Closed2Closed(t,tp),eq)∧t ↦ tp∈(lt ⦂ ℙ(RReal×RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq))∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element2" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element3" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element4" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element5" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="element7" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.directOperatorDefinition#element7" org.eventb.theory.core.formula="Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="VerifiesOn" org.eventb.core.label="VerifiesOn" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) → F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ eta(t_)∈Inv))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ eta(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀t_⦂RReal·t_∈DR⇒t_ ↦ eta(t_)∈Inv"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="withControl" org.eventb.core.label="withControl" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×UF)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="ce">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="code(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧t_ ↦ eta_ ↦ u(t_)∈dom(fu) ∣ fu(t_ ↦ eta_ ↦ u(t_)),init,initArg)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="caode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧eta_ ↦ u(t_)∈dom(fu) ∣ fu(eta_ ↦ u(t_)),init,initArg)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Controllable" org.eventb.core.label="Controllable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u)))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ControllableOn" org.eventb.core.label="ControllableOn" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧u(t_)∈DU)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧¬u(t_)∈DU))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="DU" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·t_∈DR⇒u(t_)∈DU)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="SolvableWith" org.eventb.core.label="SolvableWith" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Solvable(DR,withControl(DR,ce,u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Stable" org.eventb.core.label="Stable" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀eps⦂RReal·¬eps∈(RRealPlusStar ⦂ ℙ(RReal))∨(∃delta⦂RReal·¬delta∈(RRealPlusStar ⦂ ℙ(RReal))∨(∀z⦂ℙ(RReal×E)·¬z∈(RRealPlus ⦂ ℙ(RReal)) → E∨¬solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∨((Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal)))∨(∀t⦂RReal·¬t∈(RRealPlusStar ⦂ ℙ(RReal))∨(t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))∨(∃eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))∧(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))∧(∃z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∧(Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))∧(∃t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))∧t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))">
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_uminus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#2" org.eventb.core.type="ℙ(E×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∃delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="LyapunovStable" org.eventb.core.label="LyapunovStable" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃delta⦂RReal·¬delta∈(RRealPlusStar ⦂ ℙ(RReal))∨(∀z⦂ℙ(RReal×E)·¬z∈(RRealPlus ⦂ ℙ(RReal)) → E∨¬solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∨((Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal)))∨(∀eps⦂RReal·¬eps∈(RRealPlusStar ⦂ ℙ(RReal))∨(∃T⦂RReal·¬T∈(RRealPlus ⦂ ℙ(RReal))∨(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))∨(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))∧(∃z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∧(Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))∧(∃eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))∧(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))∧(∃t⦂RReal·¬t∈(RRealPlus ⦂ ℙ(RReal))∨¬T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨(t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))))">
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="DE(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_uminus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(E×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="∃delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∃T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees y,eq,N,vec_plus,scal_times,vec_zero,vec_uminus)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
                                        <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
                                        <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11,p12,p13,p14">
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees eps)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p17">
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees delta)" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                        <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees z)" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                                                                <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p24">
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p24"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p27">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p28"/>
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p24">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38">
                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees z)" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
                                                                                                <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="p40,p24">
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p28"/>
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p24">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p37">
                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p37">
                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;=) Reflexivity on goal" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p37">
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="leq_reflexive"/>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p47">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p28"/>
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p10">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p37">
                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p37">
                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;=) Reflexivity on goal" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p37">
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="leq_reflexive"/>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p5">
                                                                                                                <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p48">
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p5">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p49">
                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p10">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p49">
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p13">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p49">
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p49" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p49"/>
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p35">
                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p13"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p50">
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p5">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p49">
                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p10">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p49">
                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(Rzero))" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p13">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p51">
                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(Rzero)" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p24">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p52">
                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="p14">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p49"/>
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p54">
                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p14"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="." org.eventb.core.prGoal="p55">
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p5">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p49">
                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p10">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p49">
                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(Rzero))" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p13">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p51">
                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(Rzero)" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p24">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p52">
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_plus(z(Rzero) ↦ vec_uminus(y(Rzero)))" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p14">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p56">
                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="p6">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p49"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p56"/>
                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.0"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="/" org.eventb.core.prGoal="p57">
                                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="p6"/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prAnte name="0" org.eventb.core.prGoal="p58">
                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p59">
                                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees t)" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                                                                                                                                <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
                                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p62">
                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p28"/>
                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p24">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p37">
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p37">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+* =&gt; ]0,+∞[ on t∈RRealPlusStar" org.eventb.core.prHyps="p62">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p69">
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p62"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p69"/>
                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Open2Infinity expansion on t∈Open2Infinity(Rzero)" org.eventb.core.prHyps="p69">
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p70">
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p69"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p70"/>
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;) -&gt; (&lt;=) Weakening on Rzero ↦ t∈lt" org.eventb.core.prHyps="p71">
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p72">
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p72"/>
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p74"/>
                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="lt_to_leq_weakening"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Open2Infinity"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlusStar2Int"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p75">
                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p28"/>
                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32,p33,p34,p35"/>
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="p10">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p37">
                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p37">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+* =&gt; ]0,+∞[ on t∈RRealPlusStar" org.eventb.core.prHyps="p62">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p69">
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p62"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p69"/>
                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Open2Infinity expansion on t∈Open2Infinity(Rzero)" org.eventb.core.prHyps="p69">
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p70">
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p69"/>
                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p70"/>
                                                                                                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p70" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71"/>
                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;) -&gt; (&lt;=) Weakening on Rzero ↦ t∈lt" org.eventb.core.prHyps="p71">
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p37,p72">
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT2" org.eventb.core.prHyps="p72"/>
                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p72" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p73"/>
                                                                                                                                                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                                                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p37"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p73" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74"/>
                                                                                                                                                                                                                                                                <org.eventb.core.prRule name="r12" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p74"/>
                                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="lt_to_leq_weakening"/>
                                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Open2Infinity"/>
                                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlusStar2Int"/>
                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p76">
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p77">
                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p10">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p77">
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p13">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p77"/>
                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p78">
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p77">
                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p10">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p77">
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(t))" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p13">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p79">
                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(t)" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p24">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p80">
                                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p14">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p81">
                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p81" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p77"/>
                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p79"/>
                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p80"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p82">
                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p5">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p77">
                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p10">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p77">
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(t))" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p13">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p79">
                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(t)" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p24">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p80">
                                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_plus(z(t) ↦ vec_uminus(y(t)))" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p14">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p83">
                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="p6">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p83">
                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p83" org.eventb.core.prHyps="">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p77"/>
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p79"/>
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p80"/>
                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p83"/>
                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.0"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈E × E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆(RRealPlus ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="⊥∧(Rzero ⦂ RReal)≠t">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="y(t)∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="z∈(RReal ⦂ ℙ(RReal)) ⇸ E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·⊤∧⊤∧⊤∧⊤∧⊤∧⊤∧⊤⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧¬⊥∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·⊤⇒¬⊥∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·⊤⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))))"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="t∈{t⦂RReal·(Rzero ⦂ RReal) ↦ t∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E)))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="isNorm(N,vec_plus,scal_times,vec_zero)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="t∈Open2Infinity(Rzero ⦂ RReal)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(y)">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)">
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="t∈(RRealPlusStar ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="y(Rzero ⦂ RReal)∈E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="(Rzero ⦂ RReal)∈Closed2Infinity(Rzero ⦂ RReal)"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="t∈dom(y)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆dom(y)">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E)))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x))">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times∈(RReal ⦂ ℙ(RReal)) × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="vec_plus(z(t) ↦ vec_uminus(y(t)))∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="⊤⇒⊤∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(⊤⇒⊤∧⊤∧⊤∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(⊤⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E))">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="vec_plus∈E × E ⇸ E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="(Rzero ⦂ RReal) ↦ t∈(lt ⦂ ℙ(RReal×RReal))">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="(Rzero ⦂ RReal) ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧(Rzero ⦂ RReal)≠t">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="t∈{t⦂RReal·(Rzero ⦂ RReal) ↦ t∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="t∈Closed2Infinity(Rzero ⦂ RReal)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="z(Rzero ⦂ RReal)∈E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀x⦂E·x∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="(Rzero ⦂ RReal) ↦ t∈(leq ⦂ ℙ(RReal×RReal))">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="y(Rzero ⦂ RReal)∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="vec_uminus(y(t))∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="N∈E ⇸ (RReal ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="y(t)∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="delta∈(RRealPlusStar ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)">
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="z(t)∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="vec_uminus∈E ⇸ E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="(Rzero ⦂ RReal)∈{t⦂RReal·(Rzero ⦂ RReal) ↦ t∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="eps∈(RRealPlusStar ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="(Rzero ⦂ RReal) ↦ (Rzero ⦂ RReal)∈(leq ⦂ ℙ(RReal×RReal))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="vec_uminus(y(Rzero ⦂ RReal))∈E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈ℙ((RReal ⦂ ℙ(RReal)) × E)∧eq∈DE(E)∧N∈ℙ(E × (RReal ⦂ ℙ(RReal)))∧vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ((RReal ⦂ ℙ(RReal)) × E × E)∧vec_zero∈E∧vec_uminus∈ℙ(E × E)⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·(z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈ℙ((RReal ⦂ ℙ(RReal)) × E)∧eq∈DE(E)∧N∈ℙ(E × (RReal ⦂ ℙ(RReal)))∧vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ((RReal ⦂ ℙ(RReal)) × E × E)∧vec_zero∈E∧vec_uminus∈ℙ(E × E)⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧¬(RReal ⦂ ℙ(RReal))=(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒¬E=(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="y∈(RRealPlus ⦂ ℙ(RReal)) → E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="(Rzero ⦂ RReal)∈(RRealPlus ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="vec_uminus∈E → E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="z(t) ↦ vec_uminus(y(t))∈E × E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="t∈dom(z)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="RRealPlus ⦂ ℙ(RReal)"/>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="E"/>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="E × E"/>
        <org.eventb.core.prReas name="r12" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="LyapunovStable/Op-WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="vec_zero,vec_uminus,t,T,delta,eps,y,z,vec_plus,scal_times,eq,N" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="E" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="associative" org.eventb.core.label="associative" org.eventb.core.predicate="op∈M × M → M" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M,y⦂M,z⦂M·¬x∈M∨¬y∈M∨¬z∈M∨(y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)))∨(∃x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M∧y ↦ z∈dom(op)∧op∈M × M ⇸ M∧x ↦ op(y ↦ z)∈dom(op)∧op∈M × M ⇸ M∧x ↦ y∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ y) ↦ z∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M,y⦂M,z⦂M·x∈M∧y∈M∧z∈M⇒op(x ↦ op(y ↦ z))=op(op(x ↦ y) ↦ z)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="neutral" org.eventb.core.label="neutral" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂M·¬x∈M∨(x ↦ e∈dom(op)∧op∈M × M ⇸ M∧op(x ↦ e)=x∧e ↦ x∈dom(op)∧op∈M × M ⇸ M∧op(e ↦ x)=x))∨(∃x⦂M·x∈M∧((x ↦ e∈dom(op)∧op∈M × M ⇸ M∧¬op(x ↦ e)=x)∨(e ↦ x∈dom(op)∧op∈M × M ⇸ M∧¬op(e ↦ x)=x)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂M·x∈M⇒op(x ↦ e)=x∧op(e ↦ x)=x"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Monoid" org.eventb.core.label="Monoid" org.eventb.core.predicate="op∈M × M → M∧M≠(∅ ⦂ ℙ(M))" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(M×M×M)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="M"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Monoid.tuf|org.eventb.theory.core.theoryRoot#Monoid|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="associative(op)∧neutral(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="invertible" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="commutative" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Group" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AbelianGroup" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="inverses" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="distributive" org.eventb.core.label="distributive" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A,z⦂A·¬x∈A∨¬y∈A∨¬z∈A∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))))∨(∃x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A∧((y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧x ↦ oplus(y ↦ z)∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧x ↦ z∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y) ↦ otimes(x ↦ z)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z)))∨(y ↦ z∈dom(oplus)∧oplus∈A × A ⇸ A∧oplus(y ↦ z) ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧z ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(y ↦ x) ↦ otimes(z ↦ x)∈dom(oplus)∧oplus∈A × A ⇸ A∧¬otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x)))))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A,z⦂A·x∈A∧y∈A∧z∈A⇒otimes(x ↦ oplus(y ↦ z))=oplus(otimes(x ↦ y) ↦ otimes(x ↦ z))∧otimes(oplus(y ↦ z) ↦ x)=oplus(otimes(y ↦ x) ↦ otimes(z ↦ x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="integral" org.eventb.core.label="integral" org.eventb.core.predicate="otimes∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧A≠{azero})" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=azero)∨x=azero∨y=azero)∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=azero∧¬x=azero∧¬y=azero)">
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂A,y⦂A·x∈A∧y∈A⇒(otimes(x ↦ y)=azero⇒x=azero∨y=azero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Ring" org.eventb.core.label="Ring" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧AbelianGroup(oplus,azero)∧otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧Monoid(otimes,aunit)∧distributive(oplus,otimes))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧((Group(oplus,azero)∧commutative(oplus))∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))∧(¬Group(oplus,azero)∨(oplus∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((Group(oplus,azero)∧commutative(oplus))∨¬Group(oplus,azero)∨¬commutative(oplus))∧¬AbelianGroup(oplus,azero))∨(otimes∈A × A → A∧(associative(otimes)⇒A≠(∅ ⦂ ℙ(A)))∧((associative(otimes)∧neutral(otimes,aunit))∨(otimes∈A × A → A∧(¬associative(otimes)∨(otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))))))∧((associative(otimes)∧neutral(otimes,aunit))∨¬associative(otimes)∨¬neutral(otimes,aunit))∧¬Monoid(otimes,aunit))∨¬distributive(oplus,otimes)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="AbelianGroup(oplus,azero)∧Monoid(otimes,aunit)∧distributive(oplus,otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CommutativeRing" org.eventb.core.label="CommutativeRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Ring(oplus,otimes,azero,aunit)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬Ring(oplus,otimes,azero,aunit)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="Ring(oplus,otimes,azero,aunit)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInvertible" org.eventb.core.label="nonZeroInvertible" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨¬x≠azero∨(∃y⦂A·¬y∈A∨(y≠azero∧x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)))∨(∃x⦂A·x∈A∧x≠azero∧(∀y⦂A·y∈A∧(¬y≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit))))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#?|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂A·x∈A∧x≠azero⇒(∃y⦂A·y∈A⇒y≠azero∧(op(x ↦ y)=aunit∧op(y ↦ x)=aunit))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="nonZeroInverses" org.eventb.core.label="nonZeroInverses" org.eventb.core.predicate="op∈A × A → A∧(A≠(∅ ⦂ ℙ(A))∧azero≠aunit)" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬nonZeroInvertible(op,azero,aunit)∨¬x≠azero∨(x ↦ y∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ y)=aunit∧y ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(y ↦ x)=aunit)∨(nonZeroInvertible(op,azero,aunit)∧x≠azero∧((x ↦ y∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ y)=aunit)∨(y ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(y ↦ x)=aunit)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#@|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="nonZeroInvertible(op,azero,aunit)∧x≠azero⇒op(x ↦ y)=aunit∧op(y ↦ x)=aunit"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="DivisionRing" org.eventb.core.label="DivisionRing" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Field" org.eventb.core.label="Field" org.eventb.core.predicate="oplus∈A × A → A∧otimes∈A × A → A∧A≠(∅ ⦂ ℙ(A))" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧(∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧commutative(otimes))∨¬azero≠aunit∨¬Ring(oplus,otimes,azero,aunit)∨¬nonZeroInvertible(otimes,azero,aunit)∨¬integral(otimes,azero)∨((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∀x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A⇒x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A))∧((∀x⦂A,y⦂A·¬x∈A∨¬y∈A∨(x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧otimes(x ↦ y)=otimes(y ↦ x)))∨(∃x⦂A,y⦂A·x∈A∧y∈A∧x ↦ y∈dom(otimes)∧otimes∈A × A ⇸ A∧y ↦ x∈dom(otimes)∧otimes∈A × A ⇸ A∧¬otimes(x ↦ y)=otimes(y ↦ x)))∧¬commutative(otimes))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scOperatorArgument name="aunit" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="azero≠aunit∧Ring(oplus,otimes,azero,aunit)∧nonZeroInvertible(otimes,azero,aunit)∧integral(otimes,azero)∧commutative(otimes)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="absorbing" org.eventb.core.label="absorbing" org.eventb.core.predicate="op∈A × A → A" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂A·¬x∈A∨(x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧op(x ↦ azero)=azero∧azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧op(azero ↦ x)=azero))∨(∃x⦂A·x∈A∧((x ↦ azero∈dom(op)∧op∈A × A ⇸ A∧¬op(x ↦ azero)=azero)∨(azero ↦ x∈dom(op)∧op∈A × A ⇸ A∧¬op(azero ↦ x)=azero)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A×A×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Ring.tuf|org.eventb.theory.core.theoryRoot#Ring|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂A·x∈A⇒op(x ↦ azero)=azero∧op(azero ↦ x)=azero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="reflexive" org.eventb.core.label="reflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∈rel)∨(∃x⦂S·x∈S∧¬x ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#'|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antireflexive" org.eventb.core.label="antireflexive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈S∨x ↦ x∉rel)∨(∃x⦂S·x∈S∧¬x ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S·x∈S⇒x ↦ x∉rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="symetrical" org.eventb.core.label="symetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="asymetrical" org.eventb.core.label="asymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨y ↦ x∉rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧¬y ↦ x∉rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel⇒y ↦ x∉rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="antisymetrical" org.eventb.core.label="antisymetrical" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬x ↦ y∈rel∨¬y ↦ x∈rel∨x=y)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∈rel∧y ↦ x∈rel∧¬x=y)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒(x ↦ y∈rel∧y ↦ x∈rel⇒x=y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="transitive" org.eventb.core.label="transitive" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨¬y ↦ z∈rel∨x ↦ z∈rel)∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧y ↦ z∈rel∧¬x ↦ z∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S⇒(x ↦ y∈rel∧y ↦ z∈rel⇒x ↦ z∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="total" org.eventb.core.label="total" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨x ↦ y∈rel∨y ↦ x∈rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧¬x ↦ y∈rel∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂S,y⦂S·x∈S∧y∈S⇒x ↦ y∈rel∨y ↦ x∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalence" org.eventb.core.label="equivalence" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧symetrical(rel)∧transitive(rel))∨¬reflexive(rel)∨¬symetrical(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧symetrical(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="order" org.eventb.core.label="order" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel)∧antisymetrical(rel))∨¬reflexive(rel)∨¬transitive(rel)∨¬antisymetrical(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)∧antisymetrical(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strict" org.eventb.core.label="strict" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x ↦ y∈rel∧x≠y)∨¬x ↦ y∈rel∨¬x≠y">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x ↦ y∈rel∧x≠y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellFounded" org.eventb.core.label="wellFounded" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀X⦂ℙ(S)·¬X⊆S∨¬X≠(∅ ⦂ ℙ(S))∨(∃m⦂S·¬m∈X∨(∀x⦂S·¬x∈X∨x ↦ m∉rel)))∨(∃X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))∧(∀m⦂S·m∈X∧(∃x⦂S·x∈X∧¬x ↦ m∉rel)))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀X⦂ℙ(S)·X⊆S∧X≠(∅ ⦂ ℙ(S))⇒(∃m⦂S·m∈X⇒(∀x⦂S·x∈X⇒x ↦ m∉rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellPartialOrder" org.eventb.core.label="wellPartialOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="wellOrder" org.eventb.core.label="wellOrder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(order(rel)∧total(rel)∧wellFounded(strict(rel)))∨¬order(rel)∨¬total(rel)∨¬wellFounded(strict(rel))">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="order(rel)∧total(rel)∧wellFounded(strict(rel))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="covers" org.eventb.core.label="covers" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧order(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(a ↦ b∈rel∧a≠b∧(∀c⦂S·¬c∈S∨¬a ↦ c∈rel∨¬c ↦ b∈rel∨c=a∨b=a))∨¬a ↦ b∈rel∨¬a≠b∨(∃c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel∧¬c=a∧¬b=a)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="a ↦ b∈rel∧a≠b∧(∀c⦂S·c∈S∧a ↦ c∈rel∧c ↦ b∈rel⇒c=a∨b=a)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="compose" org.eventb.core.label="compose" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,z⦂S·(x∈S∧z∈S∧(∃y⦂S·¬y∈S∨(x ↦ y∈rel1∧y ↦ z∈rel2)))∨¬x∈S∨¬z∈S∨(∀y⦂S·y∈S∧(¬x ↦ y∈rel1∨¬y ↦ z∈rel2))">
                <org.eventb.theory.core.scOperatorArgument name="rel1" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="rel2" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="{x⦂S,z⦂S·x∈S∧z∈S∧(∃y⦂S·y∈S⇒x ↦ y∈rel1∧y ↦ z∈rel2) ∣ x ↦ z}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="converse" org.eventb.core.label="converse" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧y ↦ x∈rel)∨¬x∈S∨¬y∈S∨¬y ↦ x∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#6|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧y ↦ x∈rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="complement" org.eventb.core.label="complement" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x ↦ y∉rel)∨¬x∈S∨¬y∈S∨¬x ↦ y∉rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x ↦ y∉rel ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equality" org.eventb.core.label="equality" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×S)" org.eventb.theory.core.wd="∀x⦂S,y⦂S·(x∈S∧y∈S∧x=y)∨¬x∈S∨¬y∈S∨¬x=y">
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{x⦂S,y⦂S·x∈S∧y∈S∧x=y ∣ x ↦ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="preorder" org.eventb.core.label="preorder" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(reflexive(rel)∧transitive(rel))∨¬reflexive(rel)∨¬transitive(rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="reflexive(rel)∧transitive(rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="equivalenceClass" org.eventb.core.label="equivalenceClass" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))∧equivalence(rel)" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S)" org.eventb.theory.core.wd="∀y⦂S·(y∈S∧x ↦ y∈rel)∨¬y∈S∨¬x ↦ y∈rel">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{y⦂S·y∈S∧x ↦ y∈rel ∣ y}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="leftGeneralized" org.eventb.core.label="leftGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(S×ℙ(S))" org.eventb.theory.core.wd="∀x⦂S,P⦂ℙ(S)·(x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·¬y∈P∨x ↦ y∈rel))∨¬x∈S∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨(∃y⦂S·y∈P∧¬x ↦ y∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#L|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{x⦂S,P⦂ℙ(S)·x∈S∧P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧(∀y⦂S·y∈P⇒x ↦ y∈rel) ∣ x ↦ P}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="rightGeneralized" org.eventb.core.label="rightGeneralized" org.eventb.core.predicate="S≠(∅ ⦂ ℙ(S))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(S)×S)" org.eventb.theory.core.wd="∀P⦂ℙ(S),x⦂S·(P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·¬y∈P∨y ↦ x∈rel))∨¬P∈ℙ(S)∨¬P≠(∅ ⦂ ℙ(S))∨¬x∈S∨(∃y⦂S·y∈P∧¬y ↦ x∈rel)">
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#M|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{P⦂ℙ(S),x⦂S·P∈ℙ(S)∧P≠(∅ ⦂ ℙ(S))∧x∈S∧(∀y⦂S·y∈P⇒y ↦ x∈rel) ∣ P ↦ x}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBound" org.eventb.core.label="upperBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨t ↦ B∈ord)∨(∃t⦂S·t∈T∧¬t ↦ B∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#N|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒t ↦ B∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBound" org.eventb.core.label="lowerBound" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t⦂S·¬t∈T∨B ↦ t∈ord)∨(∃t⦂S·t∈T∧¬B ↦ t∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#O|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀t⦂S·t∈T⇒B ↦ t∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounds" org.eventb.core.label="bounds" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧upperBound(ord,T,M))∨¬lowerBound(ord,T,m)∨¬upperBound(ord,T,M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#X|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="upperBounded" org.eventb.core.label="upperBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨upperBound(ord,T,M))∨(∀M⦂S·M∈S∧¬upperBound(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Y|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒upperBound(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="lowerBounded" org.eventb.core.label="lowerBounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨lowerBound(ord,T,m))∨(∀m⦂S·m∈S∧¬lowerBound(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒lowerBound(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bounded" org.eventb.core.label="bounded" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S,M⦂S·¬m∈S∨¬M∈S∨bounds(ord,T,m,M))∨(∀m⦂S,M⦂S·m∈S∧M∈S∧¬bounds(ord,T,m,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S,M⦂S·m∈S∧M∈S⇒bounds(ord,T,m,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="supremum" org.eventb.core.label="supremum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(upperBound(ord,T,M)∧(∀m⦂S·¬m∈S∨¬upperBound(ord,T,m)∨M ↦ m∈ord))∨¬upperBound(ord,T,M)∨(∃m⦂S·m∈S∧upperBound(ord,T,m)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#Q|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="upperBound(ord,T,M)∧(∀m⦂S·m∈S∧upperBound(ord,T,m)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="infimum" org.eventb.core.label="infimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(lowerBound(ord,T,m)∧(∀M⦂S·¬M∈S∨¬lowerBound(ord,T,M)∨M ↦ m∈ord))∨¬lowerBound(ord,T,m)∨(∃M⦂S·M∈S∧lowerBound(ord,T,M)∧¬M ↦ m∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#P|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="lowerBound(ord,T,m)∧(∀M⦂S·M∈S∧lowerBound(ord,T,M)⇒M ↦ m∈ord)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximal" org.eventb.core.label="maximal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬M ↦ x∈ord∨x=M)∨(∃x⦂S·x∈T∧M ↦ x∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#R|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧M ↦ x∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimal" org.eventb.core.label="minimal" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨¬x ↦ M∈ord∨x=M)∨(∃x⦂S·x∈T∧x ↦ M∈ord∧¬x=M)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#S|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T∧x ↦ M∈ord⇒x=M"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="maximum" org.eventb.core.label="maximum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨x ↦ M∈ord)∨(∃x⦂S·x∈T∧¬x ↦ M∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#T|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒x ↦ M∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="minimum" org.eventb.core.label="minimum" org.eventb.core.predicate="M∈T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S·¬x∈T∨M ↦ x∈ord)∨(∃x⦂S·x∈T∧¬M ↦ x∈ord)">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scOperatorArgument name="M" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#U|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂S·x∈T⇒M ↦ x∈ord"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMaximum" org.eventb.core.label="hasMaximum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃M⦂S·¬M∈S∨maximum(ord,T,M))∨(∀M⦂S·M∈S∧¬maximum(ord,T,M))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃M⦂S·M∈S⇒maximum(ord,T,M)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="hasMinimum" org.eventb.core.label="hasMinimum" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃m⦂S·¬m∈S∨minimum(ord,T,m))∨(∀m⦂S·m∈S∧¬minimum(ord,T,m))">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃m⦂S·m∈S⇒minimum(ord,T,m)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="monoidCompatible" org.eventb.core.label="monoidCompatible" org.eventb.core.predicate="op∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒op∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Monoid(op,e)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂S,y⦂S,z⦂S·¬x∈S∨¬y∈S∨¬z∈S∨¬x ↦ y∈rel∨(x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧op(x ↦ z) ↦ op(y ↦ z)∈rel∧z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧op(z ↦ x) ↦ op(z ↦ y)∈rel))∨(∃x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel∧((x ↦ z∈dom(op)∧op∈S × S ⇸ S∧y ↦ z∈dom(op)∧op∈S × S ⇸ S∧¬op(x ↦ z) ↦ op(y ↦ z)∈rel)∨(z ↦ x∈dom(op)∧op∈S × S ⇸ S∧z ↦ y∈dom(op)∧op∈S × S ⇸ S∧¬op(z ↦ x) ↦ op(z ↦ y)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element6|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x⦂S,y⦂S,z⦂S·x∈S∧y∈S∧z∈S∧x ↦ y∈rel⇒op(x ↦ z) ↦ op(y ↦ z)∈rel∧op(z ↦ x) ↦ op(z ↦ y)∈rel"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ringCompatible" org.eventb.core.label="ringCompatible" org.eventb.core.predicate="oplus∈S × S → S∧otimes∈S × S → S∧((S≠(∅ ⦂ ℙ(S))⇒oplus∈S × S → S∧otimes∈S × S → S)∧(S≠(∅ ⦂ ℙ(S))∧Ring(oplus,otimes,azero,unit)∧order(rel)))" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·¬x∈S∨¬y∈S∨¬azero ↦ x∈rel∨¬azero ↦ y∈rel∨(x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(x ↦ y)∈rel∧y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧azero ↦ otimes(y ↦ x)∈rel)))∨¬monoidCompatible(oplus,azero,rel)∨(∃x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel∧((x ↦ y∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(x ↦ y)∈rel)∨(y ↦ x∈dom(otimes)∧otimes∈S × S ⇸ S∧¬azero ↦ otimes(y ↦ x)∈rel)))">
                <org.eventb.theory.core.scOperatorArgument name="oplus" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="otimes" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S×S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="azero" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="unit" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="S"/>
                <org.eventb.theory.core.scOperatorArgument name="rel" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="monoidCompatible(oplus,azero,rel)∧(∀x⦂S,y⦂S·x∈S∧y∈S∧azero ↦ x∈rel∧azero ↦ y∈rel⇒azero ↦ otimes(x ↦ y)∈rel∧azero ↦ otimes(y ↦ x)∈rel)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmax" org.eventb.core.label="Gmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gmin" org.eventb.core.label="Gmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Gsup" org.eventb.core.label="Gsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Ginf" org.eventb.core.label="Ginf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="S" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ord" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(S×S)"/>
                <org.eventb.theory.core.scOperatorArgument name="T" org.eventb.core.source="/SimpleDEq/Relation.tuf|org.eventb.theory.core.theoryRoot#Relation|org.eventb.theory.core.axiomaticDefinitionsBlock#Z|org.eventb.theory.core.axiomaticOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(S)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticTypeDefinition name="RReal"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rzero" org.eventb.core.label="Rzero" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rone" org.eventb.core.label="Rone" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rtwo" org.eventb.core.label="Rtwo" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#u" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="leq" org.eventb.core.label="leq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lt" org.eventb.core.label="lt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="geq" org.eventb.core.label="geq" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="gt" org.eventb.core.label="gt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmax" org.eventb.core.label="Rmax" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rmin" org.eventb.core.label="Rmin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element16|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rsup" org.eventb.core.label="Rsup" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element17|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Rinf" org.eventb.core.label="Rinf" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#C|org.eventb.theory.core.axiomaticOperatorDefinition#element18|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(RReal)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealStar" org.eventb.core.label="RRealStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlus" org.eventb.core.label="RRealPlus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinus" org.eventb.core.label="RRealMinus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealPlusStar" org.eventb.core.label="RRealPlusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="RRealMinusStar" org.eventb.core.label="RRealMinusStar" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#D|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="plus" org.eventb.core.label="plus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="times" org.eventb.core.label="times" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="uminus" org.eventb.core.label="uminus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="inverse" org.eventb.core.label="inverse" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="minus" org.eventb.core.label="minus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="divide" org.eventb.core.label="divide" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element6" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="abs" org.eventb.core.label="abs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sqrt" org.eventb.core.label="sqrt" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Reals.tuf|org.eventb.theory.core.theoryRoot#Reals|org.eventb.theory.core.axiomaticDefinitionsBlock#A|org.eventb.theory.core.axiomaticOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="VectorSpace" org.eventb.core.label="VectorSpace" org.eventb.core.predicate="vec_plus∈E × E → E∧scal_times∈K × E → E∧k_plus∈K × K → K∧k_times∈K × K → K∧((k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K)))∧Field(k_plus,k_times,k_zero,k_unit))" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧AbelianGroup(vec_plus,vec_zero)∧(k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·¬x∈E∨¬y∈E∨¬a∈K∨¬b∈K∨(b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(k_unit ↦ x)=x∧a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))∧(¬Group(vec_plus,vec_zero)∨(vec_plus∈E × E → E∧E≠(∅ ⦂ ℙ(E))))))∧((Group(vec_plus,vec_zero)∧commutative(vec_plus))∨¬Group(vec_plus,vec_zero)∨¬commutative(vec_plus))∧¬AbelianGroup(vec_plus,vec_zero))∨((k_zero≠k_unit⇒k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)⇒K≠{k_zero}))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨(k_plus∈K × K → K∧k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧(¬Ring(k_plus,k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧k_zero≠k_unit∧(¬nonZeroInvertible(k_times,k_zero,k_unit)∨(k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))∧K≠{k_zero}∧(¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K)⇒(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x))⇒k_times∈K × K → K∧K≠(∅ ⦂ ℙ(K))))))))))))∧((k_zero≠k_unit∧Ring(k_plus,k_times,k_zero,k_unit)∧nonZeroInvertible(k_times,k_zero,k_unit)∧integral(k_times,k_zero)∧(∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧commutative(k_times))∨¬k_zero≠k_unit∨¬Ring(k_plus,k_times,k_zero,k_unit)∨¬nonZeroInvertible(k_times,k_zero,k_unit)∨¬integral(k_times,k_zero)∨((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∀x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K⇒x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K))∧((∀x⦂K,y⦂K·¬x∈K∨¬y∈K∨(x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(x ↦ y)=k_times(y ↦ x)))∨(∃x⦂K,y⦂K·x∈K∧y∈K∧x ↦ y∈dom(k_times)∧k_times∈K × K ⇸ K∧y ↦ x∈dom(k_times)∧k_times∈K × K ⇸ K∧¬k_times(x ↦ y)=k_times(y ↦ x)))∧¬commutative(k_times)))∧¬Field(k_plus,k_times,k_zero,k_unit))∨(∃x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K∧((b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ scal_times(b ↦ x)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ b∈dom(k_times)∧k_times∈K × K ⇸ K∧k_times(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x))∨(k_unit ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧¬scal_times(k_unit ↦ x)=x)∨(a ↦ b∈dom(k_plus)∧k_plus∈K × K ⇸ K∧k_plus(a ↦ b) ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧b ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(b ↦ x)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x)))∨(x ↦ y∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧a ↦ vec_plus(x ↦ y)∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ x∈dom(scal_times)∧scal_times∈K × E ⇸ E∧a ↦ y∈dom(scal_times)∧scal_times∈K × E ⇸ E∧scal_times(a ↦ x) ↦ scal_times(a ↦ y)∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧¬scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))))">
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(K×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="k_plus" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_times" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(K×K×K)"/>
                <org.eventb.theory.core.scOperatorArgument name="k_zero" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scOperatorArgument name="k_unit" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="K"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="-" org.eventb.core.source="/LaSalle_Theory/Espace Vectoriel.tuf|org.eventb.theory.core.theoryRoot#Espace Vectoriel|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#-" org.eventb.theory.core.formula="AbelianGroup(vec_plus,vec_zero)∧Field(k_plus,k_times,k_zero,k_unit)∧(∀x⦂E,y⦂E,a⦂K,b⦂K·x∈E∧y∈E∧a∈K∧b∈K⇒scal_times(a ↦ scal_times(b ↦ x))=scal_times(k_times(a ↦ b) ↦ x)∧scal_times(k_unit ↦ x)=x∧scal_times(k_plus(a ↦ b) ↦ x)=vec_plus(scal_times(a ↦ x) ↦ scal_times(b ↦ x))∧scal_times(a ↦ vec_plus(x ↦ y))=vec_plus(scal_times(a ↦ x) ↦ scal_times(a ↦ y)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeperate" org.eventb.core.label="isSeperate" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀u⦂E·¬u∈E∨(u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(u)=(Rzero ⦂ RReal))∨u=vec_zero)∨(∃u⦂E·u∈E∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u)=(Rzero ⦂ RReal)∧¬u=vec_zero)">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀u⦂E·u∈E∧N(u)=(Rzero ⦂ RReal)⇒u=vec_zero"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isHomogeneous" org.eventb.core.label="isHomogeneous" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀a⦂RReal,u⦂E·¬a∈(RReal ⦂ ℙ(RReal))∨¬u∈E∨(a ↦ u∈dom(scal_times)∧scal_times∈(RReal ⦂ ℙ(RReal)) × E ⇸ E∧scal_times(a ↦ u)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧a∈dom(abs ⦂ ℙ(RReal×RReal))∧(abs ⦂ ℙ(RReal×RReal))∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u))))∨(∃a⦂RReal,u⦂E·a∈(RReal ⦂ ℙ(RReal))∧u∈E∧a ↦ u∈dom(scal_times)∧scal_times∈(RReal ⦂ ℙ(RReal)) × E ⇸ E∧scal_times(a ↦ u)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧a∈dom(abs ⦂ ℙ(RReal×RReal))∧(abs ⦂ ℙ(RReal×RReal))∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u)))">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀a⦂RReal,u⦂E·a∈(RReal ⦂ ℙ(RReal))∧u∈E⇒N(scal_times(a ↦ u))=(times ⦂ ℙ(RReal×RReal×RReal))((abs ⦂ ℙ(RReal×RReal))(a) ↦ N(u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isInegTriang" org.eventb.core.label="isInegTriang" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀u⦂E,v⦂E·¬u∈E∨¬v∈E∨(u ↦ v∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(u ↦ v)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧v∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u) ↦ N(v)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal))))∨(∃u⦂E,v⦂E·u∈E∧v∈E∧u ↦ v∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(u ↦ v)∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧u∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧v∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(u) ↦ N(v)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀u⦂E,v⦂E·u∈E∧v∈E⇒N(vec_plus(u ↦ v)) ↦ (plus ⦂ ℙ(RReal×RReal×RReal))(N(u) ↦ N(v))∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNorm" org.eventb.core.label="isNorm" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧((vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal))" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(isSeperate(N,vec_plus,scal_times,vec_zero)∧isHomogeneous(N,vec_plus,scal_times,vec_zero)∧isInegTriang(N,vec_plus,scal_times,vec_zero))∨¬isSeperate(N,vec_plus,scal_times,vec_zero)∨¬isHomogeneous(N,vec_plus,scal_times,vec_zero)∨¬isInegTriang(N,vec_plus,scal_times,vec_zero)">
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.operatorArgument#." org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="/" org.eventb.core.source="/LaSalle_Theory/Norm.tuf|org.eventb.theory.core.theoryRoot#Norm|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#\/" org.eventb.theory.core.formula="isSeperate(N,vec_plus,scal_times,vec_zero)∧isHomogeneous(N,vec_plus,scal_times,vec_zero)∧isInegTriang(N,vec_plus,scal_times,vec_zero)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Infinity2Open" org.eventb.core.label="Infinity2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Infinity2Closed" org.eventb.core.label="Infinity2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Infinity" org.eventb.core.label="Open2Infinity" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Infinity" org.eventb.core.label="Closed2Infinity" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Open" org.eventb.core.label="Open2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Open2Closed" org.eventb.core.label="Open2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(leq ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(lt ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Open" org.eventb.core.label="Closed2Open" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(lt ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Closed2Closed" org.eventb.core.label="Closed2Closed" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal)" org.eventb.theory.core.wd="∀t⦂RReal·(a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)))∨¬a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ b∈(leq ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="b" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Intervals.tuf|org.eventb.theory.core.theoryRoot#Intervals|org.eventb.theory.core.newOperatorDefinition#\/|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{t⦂RReal·a ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ b∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="bind" org.eventb.core.label="bind" org.eventb.core.predicate="fab∈E ⇸ F∧gac∈E ⇸ G∧dom(fab)=dom(gac)" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×(F×G))" org.eventb.theory.core.wd="∀x⦂E·x∈dom(fab)⇒x∈dom(fab)∧fab∈E ⇸ F∧x∈dom(gac)∧gac∈E ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="gac" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(E×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="λx⦂E·x∈dom(fab) ∣ fab(x) ↦ gac(x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fproj1" org.eventb.core.label="fproj1" org.eventb.core.predicate="fa_bc∈E ⇸ F × G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F)" org.eventb.theory.core.wd="∀x⦂F,y⦂G·(x∈F∧y∈G)∨¬x∈F∨¬y∈G">
                <org.eventb.theory.core.scOperatorArgument name="fa_bc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×(F×G))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="(λx⦂F ↦ y⦂G·x∈F∧y∈G ∣ x)∘fa_bc"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fproj2" org.eventb.core.label="fproj2" org.eventb.core.predicate="fa_bc∈E ⇸ F × G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀x⦂F,y⦂G·(x∈F∧y∈G)∨¬x∈F∨¬y∈G">
                <org.eventb.theory.core.scOperatorArgument name="fa_bc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×(F×G))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="(λx⦂F ↦ y⦂G·x∈F∧y∈G ∣ y)∘fa_bc"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfplus" org.eventb.core.label="Rfplus" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#0" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×RReal)×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀rf⦂ℙ(RReal×RReal),rg⦂ℙ(RReal×RReal)·((rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∨¬rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧x∈dom(rg)∧rg∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧rf(x) ↦ rg(x)∈dom(plus ⦂ ℙ(RReal×RReal×RReal))∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#0|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λrf⦂ℙ(RReal×RReal) ↦ rg⦂ℙ(RReal×RReal)·rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (plus ⦂ ℙ(RReal×RReal×RReal))(rf(x) ↦ rg(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rftimes" org.eventb.core.label="Rftimes" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×RReal)×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀rf⦂ℙ(RReal×RReal),rg⦂ℙ(RReal×RReal)·((rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∨¬rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧x∈dom(rg)∧rg∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧rf(x) ↦ rg(x)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λrf⦂ℙ(RReal×RReal) ↦ rg⦂ℙ(RReal×RReal)·rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧rg∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (times ⦂ ℙ(RReal×RReal×RReal))(rf(x) ↦ rg(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfscal" org.eventb.core.label="Rfscal" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×ℙ(RReal×RReal)×ℙ(RReal×RReal))" org.eventb.theory.core.wd="∀l⦂RReal,rf⦂ℙ(RReal×RReal)·((l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∨¬l∈(RReal ⦂ ℙ(RReal))∨¬rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)))∧(l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))⇒(∀x⦂RReal·x∈(RReal ⦂ ℙ(RReal))⇒x∈dom(rf)∧rf∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧l ↦ rf(x)∈dom(times ⦂ ℙ(RReal×RReal×RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))))">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λl⦂RReal ↦ rf⦂ℙ(RReal×RReal)·l∈(RReal ⦂ ℙ(RReal))∧rf∈(RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal)) ∣ λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ (times ⦂ ℙ(RReal×RReal×RReal))(l ↦ rf(x))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Rfcste" org.eventb.core.label="Rfcste" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="l" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#3|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="λx⦂RReal·x∈(RReal ⦂ ℙ(RReal)) ∣ l"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partial1" org.eventb.core.label="partial1" org.eventb.core.predicate="fab_c∈E × F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀x⦂E·x ↦ y∈dom(fab_c)⇒x ↦ y∈dom(fab_c)∧fab_c∈E × F ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab_c" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="F"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂E·x ↦ y∈dom(fab_c) ∣ fab_c(x ↦ y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partial2" org.eventb.core.label="partial2" org.eventb.core.predicate="fab_c∈E × F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(F×G)" org.eventb.theory.core.wd="∀y⦂F·x ↦ y∈dom(fab_c)⇒x ↦ y∈dom(fab_c)∧fab_c∈E × F ⇸ G">
                <org.eventb.theory.core.scOperatorArgument name="fab_c" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λy⦂F·x ↦ y∈dom(fab_c) ∣ fab_c(x ↦ y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partialComp" org.eventb.core.label="partialComp" org.eventb.core.predicate="fabb∈E × F ⇸ G∧gab∈E ⇸ F" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×G)" org.eventb.theory.core.wd="∀t⦂E·((t∈dom(gab)∧t∈dom(gab)∧gab∈E ⇸ F∧t ↦ gab(t)∈dom(fabb))∨¬t∈dom(gab)∨(t∈dom(gab)∧gab∈E ⇸ F∧¬t ↦ gab(t)∈dom(fabb)))∧(t∈dom(gab)∧t ↦ gab(t)∈dom(fabb)⇒t∈dom(gab)∧gab∈E ⇸ F∧t ↦ gab(t)∈dom(fabb)∧fabb∈E × F ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="fabb" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scOperatorArgument name="gab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element33|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λt⦂E·t∈dom(gab)∧t ↦ gab(t)∈dom(fabb) ∣ fabb(t ↦ gab(t))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="unpartialize1" org.eventb.core.label="unpartialize1" org.eventb.core.predicate="fbc∈F ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F×G)" org.eventb.theory.core.wd="∀x⦂E,y⦂F·((x∈A∧y∈dom(fbc))∨¬x∈A∨¬y∈dom(fbc))∧(x∈A∧y∈dom(fbc)⇒y∈dom(fbc)∧fbc∈F ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="fbc" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(F×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="λx⦂E ↦ y⦂F·x∈A∧y∈dom(fbc) ∣ fbc(y)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="unpartialize2" org.eventb.core.label="unpartialize2" org.eventb.core.predicate="fac∈E ⇸ G" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F×G)" org.eventb.theory.core.wd="∀x⦂E,y⦂F·((x∈dom(fac)∧y∈B)∨¬x∈dom(fac)∨¬y∈B)∧(x∈dom(fac)∧y∈B⇒x∈dom(fac)∧fac∈E ⇸ G)">
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fac" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="λx⦂E ↦ y⦂F·x∈dom(fac)∧y∈B ∣ fac(x)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="increasing" org.eventb.core.label="increasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element19|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(leq ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(leq ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyIncreasing" org.eventb.core.label="strictlyIncreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(lt ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(lt ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="decreasing" org.eventb.core.label="decreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(leq ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element21|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(leq ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(geq ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyDecreasing" org.eventb.core.label="strictlyDecreasing" org.eventb.core.predicate="f∈AR → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂RReal,y⦂RReal·¬x∈AR∨¬y∈AR∨((¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal))))∧((x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))∨x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))∨(∃x⦂RReal,y⦂RReal·x∈AR∧y∈AR∧((x ↦ y∈(lt ⦂ ℙ(RReal×RReal))∧x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧¬f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))∨(x∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧y∈dom(f)∧f∈(RReal ⦂ ℙ(RReal)) ⇸ (RReal ⦂ ℙ(RReal))∧f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal))∧¬x ↦ y∈(lt ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="AR" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element22|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂RReal,y⦂RReal·x∈AR∧y∈AR⇒(x ↦ y∈(lt ⦂ ℙ(RReal×RReal))⇔f(x) ↦ f(y)∈(gt ⦂ ℙ(RReal×RReal)))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="constant" org.eventb.core.label="constant" org.eventb.core.predicate="fa∈A → F" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(∀y⦂E·¬y∈A∨(x∈dom(fa)∧fa∈E ⇸ F∧y∈dom(fa)∧fa∈E ⇸ F∧fa(x)=fa(y))))∨(∃x⦂E·x∈A∧(∃y⦂E·y∈A∧x∈dom(fa)∧fa∈E ⇸ F∧y∈dom(fa)∧fa∈E ⇸ F∧¬fa(x)=fa(y)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element23|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(∀y⦂E·y∈A⇒fa(x)=fa(y))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="positive" org.eventb.core.label="positive" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element29|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyPositive" org.eventb.core.label="strictlyPositive" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element30|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(lt ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="negative" org.eventb.core.label="negative" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element31|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(geq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="strictlyNegative" org.eventb.core.label="strictlyNegative" org.eventb.core.predicate="far∈A → (RReal ⦂ ℙ(RReal))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂E·¬x∈A∨(x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal))))∨(∃x⦂E·x∈A∧x∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal)))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element32|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂E·x∈A⇒(Rzero ⦂ RReal) ↦ far(x)∈(gt ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="application" org.eventb.core.label="application" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F)×E×F)" org.eventb.theory.core.wd="∀f_⦂ℙ(E×F),e_⦂E·((f_∈E ⇸ F∧e_∈dom(f_))∨¬f_∈E ⇸ F∨¬e_∈dom(f_))∧(f_∈E ⇸ F∧e_∈dom(f_)⇒e_∈dom(f_)∧f_∈E ⇸ F)">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4;|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="λf_⦂ℙ(E×F) ↦ e_⦂E·f_∈E ⇸ F∧e_∈dom(f_) ∣ f_(e_)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="until" org.eventb.core.label="until" org.eventb.core.predicate="fre∈(RReal ⦂ ℙ(RReal)) ⇸ E∧gre∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(start ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧Closed2Open(start,t0)⊆dom(fre)∧Closed2Infinity(t0)⊆dom(gre))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×E)" org.eventb.theory.core.wd="∀t⦂RReal·(start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ t0∈(lt ⦂ ℙ(RReal×RReal)))∨¬start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ t0∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="start" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fre" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="t0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="gre" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4=|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="(Closed2Open(start,t0) ◁ fre)∪(Closed2Infinity(t0) ◁ gre)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="untilF" org.eventb.core.label="untilF" org.eventb.core.predicate="fref∈(RReal ⦂ ℙ(RReal)) × E ⇸ F∧gref∈(RReal ⦂ ℙ(RReal)) × E ⇸ F∧(start ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧Closed2Open(start,t0) × (∅ ⦂ ℙ(E))⊆dom(fref)∧Closed2Infinity(t0) × (∅ ⦂ ℙ(E))⊆dom(gref))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×E×F)" org.eventb.theory.core.wd="∀t⦂RReal·(start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t ↦ t0∈(lt ⦂ ℙ(RReal×RReal)))∨¬start ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨¬t ↦ t0∈(lt ⦂ ℙ(RReal×RReal))">
                <org.eventb.theory.core.scOperatorArgument name="start" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fref" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="t0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="gref" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element34|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="((Closed2Open(start,t0) × E) ◁ fref)∪((Closed2Infinity(t0) × E) ◁ gref)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="fcste" org.eventb.core.label="fcste" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(E×F)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="v" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="F"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element4A|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λx⦂E·x∈A ∣ v"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="boundedBy" org.eventb.core.label="boundedBy" org.eventb.core.predicate="far∈E ⇸ (RReal ⦂ ℙ(RReal))∧A⊆dom(far)" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x_⦂E·¬x_∈A∨(x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal))∧x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal))))∨(∃x_⦂E·x_∈A∧((x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal)))∨(x_∈dom(far)∧far∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal)))))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="far" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="fmin" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="fmax" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.newOperatorDefinition#element55|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="∀x_⦂E·x_∈A⇒fmin ↦ far(x_)∈(leq ⦂ ℙ(RReal×RReal))∧far(x_) ↦ fmax∈(leq ⦂ ℙ(RReal×RReal))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="C0" org.eventb.core.label="C0" org.eventb.core.predicate="A≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F))" org.eventb.theory.core.wd="A≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="D1" org.eventb.core.label="D1" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×F))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Cn" org.eventb.core.label="Cn" org.eventb.core.predicate="n∈ℕ" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(E×F))" org.eventb.theory.core.wd="n∈ℕ">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Dn" org.eventb.core.label="Dn" org.eventb.core.predicate="n∈ℕ∧n&gt;0" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(RReal×F))" org.eventb.theory.core.wd="n∈ℕ∧n&gt;0">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#)|org.eventb.theory.core.axiomaticOperatorDefinition#*|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Der" org.eventb.core.label="Der" org.eventb.core.predicate="fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(fa2b∈D1(A2,B)∧A2⊆dom(fa2b))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×F)" org.eventb.theory.core.wd="fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(fa2b∈D1(A2,B)∧A2⊆dom(fa2b))">
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa2b" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="Dern" org.eventb.core.label="Dern" org.eventb.core.predicate="n∈ℕ∧fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(n&gt;0∧A2⊆dom(fa2b))" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×F)" org.eventb.theory.core.wd="n∈ℕ∧fa2b∈(RReal ⦂ ℙ(RReal)) ⇸ B∧(n&gt;0∧A2⊆dom(fa2b))">
                <org.eventb.theory.core.scOperatorArgument name="n" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℤ"/>
                <org.eventb.theory.core.scOperatorArgument name="A2" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fa2b" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#*|org.eventb.theory.core.axiomaticOperatorDefinition#)|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="lipschitzContinuous" org.eventb.core.label="lipschitzContinuous" org.eventb.core.predicate="fab∈A → B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="fab∈A → B">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#'|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="kLipschitzContinuous" org.eventb.core.label="kLipschitzContinuous" org.eventb.core.predicate="fab∈A → B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="fab∈A → B">
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element2" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="fab" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#element3" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="r" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#6|org.eventb.theory.core.axiomaticOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
            </org.eventb.theory.core.scAxiomaticOperatorDefinition>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="pi" org.eventb.core.label="pi" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="RReal" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="sin" org.eventb.core.label="sin" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#'" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scAxiomaticOperatorDefinition name="cos" org.eventb.core.label="cos" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Functions.tuf|org.eventb.theory.core.theoryRoot#Functions|org.eventb.theory.core.axiomaticDefinitionsBlock#element4|org.eventb.theory.core.axiomaticOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(RReal×RReal)" org.eventb.theory.core.wd="⊤"/>
            <org.eventb.theory.core.scNewOperatorDefinition name="partitionS" org.eventb.core.label="partitionS" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="((∀X1⦂ℙ(E),X2⦂ℙ(E)·¬X1∈Xs∨¬X2∈Xs∨¬X1≠X2∨X1∩X2=(∅ ⦂ ℙ(E)))∧union(Xs)=X)∨(∃X1⦂ℙ(E),X2⦂ℙ(E)·X1∈Xs∧X2∈Xs∧X1≠X2∧¬X1∩X2=(∅ ⦂ ℙ(E)))∨¬union(Xs)=X">
                <org.eventb.theory.core.scOperatorArgument name="X" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="Xs" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="(∀X1⦂ℙ(E),X2⦂ℙ(E)·X1∈Xs∧X2∈Xs∧X1≠X2⇒X1∩X2=(∅ ⦂ ℙ(E)))∧union(Xs)=X"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="piecewiseContinuous" org.eventb.core.label="piecewiseContinuous" org.eventb.core.predicate="f∈union(Ix) → B∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))∧I0 ◁ f∈C0(I0,B)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0≠(∅ ⦂ ℙ(E))∧B≠(∅ ⦂ ℙ(F))∧¬I0 ◁ f∈C0(I0,B))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒I0 ◁ f∈C0(I0,B)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="partialPiecewiseContinuous" org.eventb.core.label="partialPiecewiseContinuous" org.eventb.core.predicate="g∈union(Ix) × B → C∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0 × B≠(∅ ⦂ ℙ(E×F))∧C≠(∅ ⦂ ℙ(G))∧(I0 × B) ◁ g∈C0(I0 × B,C)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0 × B≠(∅ ⦂ ℙ(E×F))∧C≠(∅ ⦂ ℙ(G))∧¬(I0 × B) ◁ g∈C0(I0 × B,C))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="C" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(G)"/>
                <org.eventb.theory.core.scOperatorArgument name="g" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F×G)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒(I0 × B) ◁ g∈C0(I0 × B,C)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="piecewiseLipschitzContinuous" org.eventb.core.label="piecewiseLipschitzContinuous" org.eventb.core.predicate="f∈union(Ix) → B∧(Ix≠(∅ ⦂ ℙ(ℙ(E)))∧(∀I1⦂ℙ(E),I2⦂ℙ(E)·I1∈Ix∧I2∈Ix∧I1≠I2⇒I1∩I2=(∅ ⦂ ℙ(E))))" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀I0⦂ℙ(E)·¬I0∈Ix∨(I0 ◁ f∈I0 → B∧lipschitzContinuous(I0,B,I0 ◁ f)))∨(∃I0⦂ℙ(E)·I0∈Ix∧I0 ◁ f∈I0 → B∧¬lipschitzContinuous(I0,B,I0 ◁ f))">
                <org.eventb.theory.core.scOperatorArgument name="Ix" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(E))"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="f" org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Piecewise.tuf|org.eventb.theory.core.theoryRoot#Piecewise|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="∀I0⦂ℙ(E)·I0∈Ix⇒lipschitzContinuous(I0,B,I0 ◁ f)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="DE">
                <org.eventb.theory.core.scTypeArgument name="F" org.eventb.theory.core.givenType="F"/>
                <org.eventb.theory.core.scDatatypeConstructor name="ode">
                    <org.eventb.theory.core.scConstructorArgument name="fun" org.eventb.core.type="ℙ(RReal×F×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="initial" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="initialArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="aode">
                    <org.eventb.theory.core.scConstructorArgument name="afun" org.eventb.core.type="ℙ(F×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="ainit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="ainitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="CDE">
                <org.eventb.theory.core.scTypeArgument name="F" org.eventb.theory.core.givenType="F"/>
                <org.eventb.theory.core.scTypeArgument name="UF" org.eventb.theory.core.givenType="UF"/>
                <org.eventb.theory.core.scDatatypeConstructor name="code">
                    <org.eventb.theory.core.scConstructorArgument name="cfun" org.eventb.core.type="ℙ(RReal×F×UF×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="cinit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="cinitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="caode">
                    <org.eventb.theory.core.scConstructorArgument name="cafun" org.eventb.core.type="ℙ(F×UF×F)"/>
                    <org.eventb.theory.core.scConstructorArgument name="cainit" org.eventb.core.type="F"/>
                    <org.eventb.theory.core.scConstructorArgument name="cainitArg" org.eventb.core.type="RReal"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="autonomousToODE" org.eventb.core.label="autonomousToODE" org.eventb.core.predicate="∃f⦂ℙ(F×F),i⦂F,ia⦂RReal·f∈F ⇸ F∧i∈F∧ia∈(RReal ⦂ ℙ(RReal))∧e=aode(f,i,ia)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="(∀t_⦂RReal,eta_⦂F·((t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e)))∨¬t_∈(RReal ⦂ ℙ(RReal))∨¬eta_∈F∨((∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧¬eta_∈dom(afun(e))))∧(t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e))⇒(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e))∧afun(e)∈F ⇸ F))∧(∃fun0⦂ℙ(RReal×F×F),initial1⦂F,initialArg2⦂RReal·e=ode(fun0,initial1,initialArg2))">
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e)) ∣ afun(e)(eta_),initial(e),initialArg(e))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="solutionOf" org.eventb.core.label="solutionOf" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(eta)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=partialComp(fu,eta)∧eta(initArg)=init"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=fu∘eta∧eta(initArg)=init"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CauchyLipschitzCondition" org.eventb.core.label="CauchyLipschitzCondition" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(DR × DF,F)∧(∀t0⦂RReal·t0∈DR⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(F,F)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="PiecewiseCauchyLipschitzCondition" org.eventb.core.label="PiecewiseCauchyLipschitzCondition" org.eventb.core.predicate="DRs≠(∅ ⦂ ℙ(ℙ(RReal)))∧(∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal)·DR1∈DRs∧DR2∈DRs∧DR1≠DR2⇒DR1∩DR2=(∅ ⦂ ℙ(RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DRs" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(RReal))"/>
                <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#," org.eventb.theory.core.inductiveArgument="eq">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧partialPiecewiseContinuous(DRs,DF,DF,fu)∧(∀t0⦂RReal·t0∈union(DRs)⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧fu∈C0(F,F)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Solvable" org.eventb.core.label="Solvable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq))∨(∀x⦂ℙ(RReal×F)·¬x∈(RReal ⦂ ℙ(RReal)) ⇸ F∨¬DR⊆dom(x)∨¬solutionOf(DR,x,eq))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="AppendSolutionBAP" org.eventb.core.label="AppendSolutionBAP" org.eventb.core.predicate="A∈ℙ(DR)∧B∈ℙ(DR)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧(A∩B=(∅ ⦂ ℙ(RReal))∧Solvable(B,eq)∧DR⊆dom(eta))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq))∨¬DR⊆dom(etap)∨¬A ◁ etap=A ◁ eta∨¬solutionOf(B,B ◁ etap,eq)">
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CBAP" org.eventb.core.label="CBAP" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Pred∈ℙ(((RRealPlus ⦂ ℙ(RReal)) ⇸ F) × ((RRealPlus ⦂ ℙ(RReal)) ⇸ F))∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨¬t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred)∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Pred" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(ℙ(RReal×F)×ℙ(RReal×F))"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="CBAPsolutionOf" org.eventb.core.label="CBAPsolutionOf" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap)∧Solvable(Closed2Closed(t,tp),eq)∧t ↦ tp∈(lt ⦂ ℙ(RReal×RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq))∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="RReal"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element2" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element3" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element4" org.eventb.core.type="DE(F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element5" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="element7" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.directOperatorDefinition#element7" org.eventb.theory.core.formula="Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="VerifiesOn" org.eventb.core.label="VerifiesOn" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) → F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ eta(t_)∈Inv))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ eta(t_)∈Inv)">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀t_⦂RReal·t_∈DR⇒t_ ↦ eta(t_)∈Inv"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="withControl" org.eventb.core.label="withControl" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×UF)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="ce">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="code(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧t_ ↦ eta_ ↦ u(t_)∈dom(fu) ∣ fu(t_ ↦ eta_ ↦ u(t_)),init,initArg)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="caode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧eta_ ↦ u(t_)∈dom(fu) ∣ fu(eta_ ↦ u(t_)),init,initArg)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Controllable" org.eventb.core.label="Controllable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u)))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="ControllableOn" org.eventb.core.label="ControllableOn" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧u(t_)∈DU)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧¬u(t_)∈DU))">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="DU" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·t_∈DR⇒u(t_)∈DU)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="SolvableWith" org.eventb.core.label="SolvableWith" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="CDE(F,UF)"/>
                <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×UF)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Solvable(DR,withControl(DR,ce,u))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="Stable" org.eventb.core.label="Stable" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀eps⦂RReal·¬eps∈(RRealPlusStar ⦂ ℙ(RReal))∨(∃delta⦂RReal·¬delta∈(RRealPlusStar ⦂ ℙ(RReal))∨(∀z⦂ℙ(RReal×E)·¬z∈(RRealPlus ⦂ ℙ(RReal)) → E∨¬solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∨((Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal)))∨(∀t⦂RReal·¬t∈(RRealPlusStar ⦂ ℙ(RReal))∨(t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))∨(∃eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))∧(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))∧(∃z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∧(Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))∧(∃t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))∧t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))">
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#1" org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_uminus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#2" org.eventb.core.type="ℙ(E×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∃delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀t⦂RReal·t∈(RRealPlusStar ⦂ ℙ(RReal))⇒N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="LyapunovStable" org.eventb.core.label="LyapunovStable" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃delta⦂RReal·¬delta∈(RRealPlusStar ⦂ ℙ(RReal))∨(∀z⦂ℙ(RReal×E)·¬z∈(RRealPlus ⦂ ℙ(RReal)) → E∨¬solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∨((Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal)))∨(∀eps⦂RReal·¬eps∈(RRealPlusStar ⦂ ℙ(RReal))∨(∃T⦂RReal·¬T∈(RRealPlus ⦂ ℙ(RReal))∨(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))∨(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))∧(∃z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)∧(Rzero ⦂ RReal)∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))∧(∃eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))∧(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))∧(∃t⦂RReal·¬t∈(RRealPlus ⦂ ℙ(RReal))∨¬T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∨(t∈dom(z)∧z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧t∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(t)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧¬N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal))))))))">
                <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="DE(E)"/>
                <org.eventb.theory.core.scOperatorArgument name="N" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(E×RReal)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_plus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(E×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="scal_times" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal×E×E)"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_zero" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="E"/>
                <org.eventb.theory.core.scOperatorArgument name="vec_uminus" org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#-" org.eventb.core.type="ℙ(E×E)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/LaSalle_Theory/Stability.tuf|org.eventb.theory.core.theoryRoot#Stability|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="∃delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∃T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))∧N(vec_plus(z(t) ↦ vec_uminus(y(t)))) ↦ eps∈(lt ⦂ ℙ(RReal×RReal)))))))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p2">
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p2" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees y,eq,N,vec_plus,scal_times,vec_zero,vec_uminus)" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                                        <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
                                        <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
                                        <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
                                        <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
                                        <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
                                        <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
                                        <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11,p12,p13,p14">
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees delta)" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                        <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p17">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees z)" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                                                <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p21">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p21"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p24">
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p25"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29,p30,p31,p32"/>
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p21">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
                                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p35">
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees z)" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
                                                                                <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p37,p21">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p25"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29,p30,p31,p32"/>
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="p21">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="p34">
                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p34">
                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;=) Reflexivity on goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p34">
                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="leq_reflexive"/>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p44">
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="p5,p6,p8,p10,p11,p12,p14" org.eventb.core.prInfHyps="p25"/>
                                                                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29,p30,p31,p32"/>
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p44" org.eventb.core.prHyps="p10">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ℝ+ =&gt; [0,+∞[ on goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="p34">
                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Closed2Infinity expansion on goal" org.eventb.core.prGoal="p41" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="p34">
                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p43">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="(&lt;=) Reflexivity on goal" org.eventb.core.prGoal="p43" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p34">
                                                                                                                                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p34"/>
                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Reals"/>
                                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="leq_reflexive"/>
                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="Intervals.Closed2Infinity"/>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".ThyProject" org.eventb.core.prSValue="SimpleDEq"/>
                                                                                                                            <org.eventb.core.prString name=".Thy" org.eventb.core.prSValue="Intervals"/>
                                                                                                                            <org.eventb.core.prString name=".Rule" org.eventb.core.prSValue="RPlus2Int"/>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p5">
                                                                                                <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p5"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p45">
                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p5">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p46">
                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p10">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p46">
                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p45" org.eventb.core.prHyps="p13">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p46">
                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p46" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p46"/>
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p32">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="p13"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p47">
                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p5">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p46">
                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p10">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p46">
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(Rzero))" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p13">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p48">
                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(Rzero)" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p21">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p49">
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p47" org.eventb.core.prHyps="p14">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p50">
                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p50" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p46"/>
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p48"/>
                                                                                                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p49"/>
                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p51">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="p14"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="." org.eventb.core.prGoal="p52">
                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p5">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p46">
                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(Rzero)" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p10">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p46">
                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(Rzero))" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p13">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p48">
                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(Rzero)" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p21">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p49">
                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_plus(z(Rzero) ↦ vec_uminus(y(Rzero)))" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p14">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p53">
                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p52" org.eventb.core.prHyps="p6">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p46"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p48"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p49"/>
                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p53"/>
                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="/" org.eventb.core.prGoal="p54">
                                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p6"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prAnte name="0" org.eventb.core.prGoal="p55">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="p56">
                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees eps)" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                                                <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p59">
                                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees T)" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                                                                                                                                <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
                                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="">
                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p62">
                                                                                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees t)" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
                                                                                                                                                <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
                                                                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="p65,p66">
                                                                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p68">
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p21">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                                                                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p66"/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p69">
                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p10">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                                                                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p66"/>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p70">
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p5">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p71">
                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p10">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p71">
                                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p70" org.eventb.core.prHyps="p13">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p71">
                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p72">
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p5">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p71">
                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p10">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p71">
                                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(t))" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p13">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p73">
                                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(t)" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p21">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p74">
                                                                                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p72" org.eventb.core.prHyps="p14">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p73"/>
                                                                                                                                                                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p74"/>
                                                                                                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e2"/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p76">
                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p5">
                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p71">
                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for y(t)" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p10">
                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p71">
                                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_uminus(y(t))" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p13">
                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p73">
                                                                                                                                                                                        <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for z(t)" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p21">
                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p74">
                                                                                                                                                                                                <org.eventb.core.prRule name="r11" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for vec_plus(z(t) ↦ vec_uminus(y(t)))" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p14">
                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p77">
                                                                                                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="p6">
                                                                                                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
                                                                                                                                                                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p77" org.eventb.core.prHyps="">
                                                                                                                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p71"/>
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p73"/>
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p74"/>
                                                                                                                                                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p77"/>
                                                                                                                                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps=""/>
                                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e1"/>
                                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.0"/>
                                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1"/>
                                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1.1.1"/>
                                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                                </org.eventb.core.prRule>
                                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                                        </org.eventb.core.prRule>
                                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                                </org.eventb.core.prRule>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈E × E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆(RRealPlus ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="y(t)∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="z∈(RReal ⦂ ℙ(RReal)) ⇸ E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="isNorm(N,vec_plus,scal_times,vec_zero)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E)))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(y)">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)">
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="y(Rzero ⦂ RReal)∈E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="(Rzero ⦂ RReal)∈Closed2Infinity(Rzero ⦂ RReal)"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="t∈dom(y)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆dom(y)">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x))">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="scal_times∈(RReal ⦂ ℙ(RReal)) × E → E">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="vec_plus(z(t) ↦ vec_uminus(y(t)))∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="⊤⇒⊤∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(⊤⇒⊤∧⊤∧⊤∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(⊤⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E))">
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="y∈(RReal ⦂ ℙ(RReal)) ⇸ E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="vec_plus∈E × E ⇸ E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="T ↦ t∈(leq ⦂ ℙ(RReal×RReal))">
            <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·⊤∧⊤∧⊤∧⊤∧⊤∧⊤∧⊤⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧¬⊥∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·⊤⇒¬⊥∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·⊤⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="(Rzero ⦂ RReal)∈dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="z(Rzero ⦂ RReal)∈E">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E)))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀x⦂E·x∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="vec_plus∈E × E → E">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="y(Rzero ⦂ RReal)∈dom(vec_uminus)">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="vec_uminus(y(t))∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="N∈E ⇸ (RReal ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈dom(vec_uminus))∧vec_uminus∈E ⇸ E))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="scal_times" org.eventb.core.type="ℙ(RReal×E×E)"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="vec_zero" org.eventb.core.type="E"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="(RRealPlus ⦂ ℙ(RReal))⊆dom(z)">
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="y(t)∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="delta∈(RRealPlusStar ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="delta" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="T∈(RRealPlus ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)">
            <org.eventb.core.prIdent name="eq" org.eventb.core.type="DE(E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈ℙ((RReal ⦂ ℙ(RReal)) × E)∧eq∈DE(E)∧N∈ℙ(E × (RReal ⦂ ℙ(RReal)))∧vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ((RReal ⦂ ℙ(RReal)) × E × E)∧vec_zero∈E∧vec_uminus∈ℙ(E × E)⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧((y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(RReal ⦂ ℙ(RReal))≠(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒E≠(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·(z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N)))))))))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)">
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="z(t)∈E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="vec_uminus∈E ⇸ E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="(Rzero ⦂ RReal)∈{t⦂RReal·(Rzero ⦂ RReal) ↦ t∈(leq ⦂ ℙ(RReal×RReal)) ∣ t}"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="(Rzero ⦂ RReal) ↦ (Rzero ⦂ RReal)∈(leq ⦂ ℙ(RReal×RReal))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="eps∈(RRealPlusStar ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="eps" org.eventb.core.type="RReal"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="vec_uminus(y(Rzero ⦂ RReal))∈E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀y⦂ℙ(RReal×E),eq⦂DE(E),N⦂ℙ(E×RReal),vec_plus⦂ℙ(E×E×E),scal_times⦂ℙ(RReal×E×E),vec_zero⦂E,vec_uminus⦂ℙ(E×E)·y∈ℙ((RReal ⦂ ℙ(RReal)) × E)∧eq∈DE(E)∧N∈ℙ(E × (RReal ⦂ ℙ(RReal)))∧vec_plus∈ℙ(E × E × E)∧scal_times∈ℙ((RReal ⦂ ℙ(RReal)) × E × E)∧vec_zero∈E∧vec_uminus∈ℙ(E × E)⇒(y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧vec_uminus∈E → E∧(y∈(RRealPlus ⦂ ℙ(RReal)) → E⇒y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(y)∧(solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)⇒N∈E → (RReal ⦂ ℙ(RReal))∧vec_plus∈E × E → E∧scal_times∈(RReal ⦂ ℙ(RReal)) × E → E∧(plus ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧(times ⦂ ℙ(RReal×RReal×RReal))∈(RReal ⦂ ℙ(RReal)) × (RReal ⦂ ℙ(RReal)) → (RReal ⦂ ℙ(RReal))∧¬(RReal ⦂ ℙ(RReal))=(∅ ⦂ ℙ(RReal))∧Field(plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧VectorSpace(vec_plus,scal_times,vec_zero,plus ⦂ ℙ(RReal×RReal×RReal),times ⦂ ℙ(RReal×RReal×RReal),Rzero ⦂ RReal,Rone ⦂ RReal)∧(isNorm(N,vec_plus,scal_times,vec_zero)⇒(∀x⦂E·x∈E⇒¬E=(∅ ⦂ ℙ(E))∧x∈dom(vec_uminus)∧vec_uminus∈E ⇸ E))))∧y∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),y,eq)∧isNorm(N,vec_plus,scal_times,vec_zero)∧(∀x⦂E·x∈E⇒inverses(vec_plus,vec_zero,x,vec_uminus(x)))⇒(∀delta⦂RReal·delta∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E⇒z∈(RReal ⦂ ℙ(RReal)) ⇸ E∧(RRealPlus ⦂ ℙ(RReal))⊆dom(z))∧(∀z⦂ℙ(RReal×E)·z∈(RRealPlus ⦂ ℙ(RReal)) → E∧solutionOf(RRealPlus ⦂ ℙ(RReal),z,eq)⇒(Rzero ⦂ RReal)∈dom(z)∧(Rzero ⦂ RReal)∈dom(y)∧y∈(RReal ⦂ ℙ(RReal)) ⇸ E∧y(Rzero ⦂ RReal)∈dom(vec_uminus)∧vec_uminus∈E ⇸ E∧z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal))∈dom(vec_plus)∧vec_plus∈E × E ⇸ E∧vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))∈dom(N)∧N∈E ⇸ (RReal ⦂ ℙ(RReal))∧(N(vec_plus(z(Rzero ⦂ RReal) ↦ vec_uminus(y(Rzero ⦂ RReal)))) ↦ delta∈(lt ⦂ ℙ(RReal×RReal))⇒(∀eps⦂RReal·eps∈(RRealPlusStar ⦂ ℙ(RReal))⇒(∀T⦂RReal·T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))))))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="N∈E → (RReal ⦂ ℙ(RReal))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="y∈(RRealPlus ⦂ ℙ(RReal)) → E">
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="(Rzero ⦂ RReal)∈(RRealPlus ⦂ ℙ(RReal))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="vec_uminus∈E → E">
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="z(t) ↦ vec_uminus(y(t))∈E × E">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="t∈dom(z)">
            <org.eventb.core.prIdent name="t" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="T∈(RRealPlus ⦂ ℙ(RReal))⇒(∀t⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧T ↦ t∈(leq ⦂ ℙ(RReal×RReal))⇒t∈dom(z)∧t∈dom(y)∧y(t)∈dom(vec_uminus)∧z(t) ↦ vec_uminus(y(t))∈dom(vec_plus)∧vec_plus(z(t) ↦ vec_uminus(y(t)))∈dom(N))">
            <org.eventb.core.prIdent name="N" org.eventb.core.type="ℙ(E×RReal)"/>
            <org.eventb.core.prIdent name="T" org.eventb.core.type="RReal"/>
            <org.eventb.core.prIdent name="vec_plus" org.eventb.core.type="ℙ(E×E×E)"/>
            <org.eventb.core.prIdent name="vec_uminus" org.eventb.core.type="ℙ(E×E)"/>
            <org.eventb.core.prIdent name="y" org.eventb.core.type="ℙ(RReal×E)"/>
            <org.eventb.core.prIdent name="z" org.eventb.core.type="ℙ(RReal×E)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="RRealPlus ⦂ ℙ(RReal)"/>
        <org.eventb.core.prExpr name="e1" org.eventb.core.expression="E"/>
        <org.eventb.core.prExpr name="e2" org.eventb.core.expression="E × E"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.theory.rbp.manualRewriteReasoner"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r11" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL3"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
