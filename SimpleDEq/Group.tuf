<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.comment="Define a standard Group and Abelian Group (commutative group)" org.eventb.core.configuration="org.eventb.theory.core.thy">
<org.eventb.theory.core.typeParameter name="(" org.eventb.core.identifier="G"/>
<org.eventb.theory.core.newOperatorDefinition name=")" org.eventb.core.label="invertible" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="(G × G) → G" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="G" org.eventb.core.identifier="e"/>
<org.eventb.theory.core.operatorWDcondition name=")" org.eventb.core.predicate="G ≠ ∅"/>
<org.eventb.theory.core.directOperatorDefinition name="*" org.eventb.theory.core.formula="∀ x · x ∈ G ⇒ (∃ y · y ∈ G ⇒ (op(x ↦ y) = e ∧ op(y ↦ x) = e))"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="*" org.eventb.core.label="commutative" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="(G × G) → G" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.operatorWDcondition name="(" org.eventb.core.predicate="G ≠ ∅"/>
<org.eventb.theory.core.directOperatorDefinition name=")" org.eventb.theory.core.formula="∀ x, y · x ∈ G ∧ y ∈ G ⇒ op(x ↦ y) = op(y ↦ x)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.label="Group" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="(G × G) → G" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="G" org.eventb.core.identifier="e"/>
<org.eventb.theory.core.operatorWDcondition name=")" org.eventb.core.predicate="G ≠ ∅"/>
<org.eventb.theory.core.directOperatorDefinition name="*" org.eventb.theory.core.formula="Monoid(op, e) ∧ invertible(op, e)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="," org.eventb.core.comment="a" org.eventb.core.label="AbelianGroup" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="(G × G) → G" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="G" org.eventb.core.identifier="e"/>
<org.eventb.theory.core.operatorWDcondition name=")" org.eventb.core.predicate="G ≠ ∅"/>
<org.eventb.theory.core.directOperatorDefinition name="*" org.eventb.theory.core.formula="Group(op, e) ∧ commutative(op)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.newOperatorDefinition name="." org.eventb.core.label="inverses" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
<org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="(G × G) → G" org.eventb.core.identifier="op"/>
<org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="G" org.eventb.core.identifier="e"/>
<org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="G" org.eventb.core.identifier="x"/>
<org.eventb.theory.core.operatorArgument name="*" org.eventb.core.expression="G" org.eventb.core.identifier="y"/>
<org.eventb.theory.core.operatorWDcondition name="+" org.eventb.core.predicate="G ≠ ∅"/>
<org.eventb.theory.core.directOperatorDefinition name="," org.eventb.theory.core.formula="invertible(op, e) ⇒ (op(x ↦ y) = e ∧ op(y ↦ x) = e)"/>
</org.eventb.theory.core.newOperatorDefinition>
<org.eventb.theory.core.theorem name="/" org.eventb.core.label="inversesCommutative" org.eventb.core.predicate="∀ op, e, x, y · op ∈ ((G × G) → G) ∧ e ∈ G ∧ x ∈ G ∧ y ∈ G ∧ Group(op, e) ⇒&#10;&#9;(inverses(op, e, x, y) ⇔ inverses(op, e, y, x))"/>
<org.eventb.theory.core.theorem name="0" org.eventb.core.label="latinSquare" org.eventb.core.predicate="∀ op, e, x, y · op ∈ ((G × G) → G) ∧ e ∈ G ∧ x ∈ G ∧ y ∈ G ∧ Group(op, e) ⇒ (&#10;&#9;∃ g · g ∈ G ⇒ (op(x ↦ g) = y ∧ (∀ g2 · g2 ∈ G ∧ op(x ↦ g2) = y ⇒ g = g2))&#10;)"/>
<org.eventb.theory.core.theorem name="3" org.eventb.core.label="leftCancellation" org.eventb.core.predicate="∀ op, e· op ∈ ((G × G) → G) ∧ e ∈ G ∧ Group(op, e) ⇒ (&#10;&#9;∀ a, b, c · a ∈ G ∧ b ∈ G ∧ c ∈ G ⇒&#10;&#9;&#9;((op(a ↦ b) = op(a ↦ c)) ⇔ (b = c))&#10;)"/>
<org.eventb.theory.core.theorem name="4" org.eventb.core.label="rightCancellation" org.eventb.core.predicate="∀ op, e· op ∈ ((G × G) → G) ∧ e ∈ G ∧ Group(op, e) ⇒ (&#10;&#9;∀ a, b, c · a ∈ G ∧ b ∈ G ∧ c ∈ G ⇒&#10;&#9;&#9;((op(b ↦ a) = op(c ↦ a)) ⇔ (b = c))&#10;)"/>
<org.eventb.theory.core.theorem name="5" org.eventb.core.label="inverseEqn" org.eventb.core.predicate="∀ op, e· op ∈ ((G × G) → G) ∧ e ∈ G ∧ Group(op, e) ⇒ (&#10;&#9;∀ x, y · x ∈ G ∧ y ∈ G ⇒ (&#10;&#9;&#9;op(x ↦ y) = e ⇔ inverses(op, e, x, y)&#10;&#9;)&#10;)"/>
<org.eventb.theory.core.theorem name="7" org.eventb.core.label="zeroInverse" org.eventb.core.predicate="∀ op, e · op ∈ ((G × G) → G) ∧ e ∈ G ∧ invertible(op, e) ∧ neutral(op, e) ⇒ inverses(op, e, e, e)"/>
<org.eventb.theory.core.importTheoryProject name="8" org.eventb.theory.core.importTheoryProject="/SimpleDEq">
<org.eventb.theory.core.importTheory name="'" org.eventb.theory.core.importTheory="/SimpleDEq/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
</org.eventb.theory.core.importTheoryProject>
</org.eventb.theory.core.theoryRoot>
