<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/SimpleDEq/Group.tuf">
    <org.eventb.theory.core.scImportTheoryProject name="'" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.importTheoryProject#8" org.eventb.theory.core.importTheoryProject="/SimpleDEq">
        <org.eventb.theory.core.scImportTheory name="'" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.importTheoryProject#8|org.eventb.theory.core.importTheory#'" org.eventb.theory.core.importTheory="/SimpleDEq/Monoid.dtf|org.eventb.theory.core.deployedTheoryRoot#Monoid"/>
    </org.eventb.theory.core.scImportTheoryProject>
    <org.eventb.theory.core.scTypeParameter name="G" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(G)"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="H" org.eventb.core.label="invertible" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G·¬x∈G∨(∃y⦂G·¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)))∨(∃x⦂G·x∈G∧(∀y⦂G·y∈G∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e))))">
        <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="I" org.eventb.core.label="commutative" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀x⦂G,y⦂G·¬x∈G∨¬y∈G∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=op(y ↦ x)))∨(∃x⦂G,y⦂G·x∈G∧y∈G∧x ↦ y∈dom(op)∧op∈G × G ⇸ G∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=op(y ↦ x))">
        <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="J" org.eventb.core.label="Group" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧Monoid(op,e)∧invertible(op,e))∨(op∈G × G → G∧(associative(op)⇒G≠(∅ ⦂ ℙ(G)))∧((associative(op)∧neutral(op,e))∨(op∈G × G → G∧(¬associative(op)∨(op∈G × G → G∧G≠(∅ ⦂ ℙ(G))))))∧((associative(op)∧neutral(op,e))∨¬associative(op)∨¬neutral(op,e))∧¬Monoid(op,e))∨¬invertible(op,e)">
        <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="K" org.eventb.core.label="AbelianGroup" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(Group(op,e)∧commutative(op))∨¬Group(op,e)∨¬commutative(op)">
        <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="L" org.eventb.core.label="inverses" org.eventb.core.predicate="op∈G × G → G∧G≠(∅ ⦂ ℙ(G))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="¬invertible(op,e)∨(x ↦ y∈dom(op)∧op∈G × G ⇸ G∧op(x ↦ y)=e∧y ↦ x∈dom(op)∧op∈G × G ⇸ G∧op(y ↦ x)=e)∨(invertible(op,e)∧((x ↦ y∈dom(op)∧op∈G × G ⇸ G∧¬op(x ↦ y)=e)∨(y ↦ x∈dom(op)∧op∈G × G ⇸ G∧¬op(y ↦ x)=e)))">
        <org.eventb.theory.core.scOperatorArgument name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scOperatorArgument name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scOperatorArgument name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#," org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)">
        <org.eventb.theory.core.scMetavariable name="op" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="ℙ(G×G×G)"/>
        <org.eventb.theory.core.scMetavariable name="e" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="G"/>
        <org.eventb.theory.core.scRewriteRule name="Group.invertible" org.eventb.core.accurate="true" org.eventb.core.label="Group.invertible" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="invertible expansion" org.eventb.theory.core.formula="invertible(op,e)">
            <org.eventb.theory.core.scRewriteRuleRHS name="invertible rhs" org.eventb.core.label="invertible rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="∀x⦂G·x∈G⇒(∃y⦂G·y∈G⇒op(x ↦ y)=e∧op(y ↦ x)=e)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="Group.commutative" org.eventb.core.accurate="true" org.eventb.core.label="Group.commutative" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="commutative expansion" org.eventb.theory.core.formula="commutative(op)">
            <org.eventb.theory.core.scRewriteRuleRHS name="commutative rhs" org.eventb.core.label="commutative rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.formula="∀x⦂G,y⦂G·x∈G∧y∈G⇒op(x ↦ y)=op(y ↦ x)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="Group.Group" org.eventb.core.accurate="true" org.eventb.core.label="Group.Group" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Group expansion" org.eventb.theory.core.formula="Group(op,e)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Group rhs" org.eventb.core.label="Group rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="Monoid(op,e)∧invertible(op,e)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="Group.AbelianGroup" org.eventb.core.accurate="true" org.eventb.core.label="Group.AbelianGroup" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="AbelianGroup expansion" org.eventb.theory.core.formula="AbelianGroup(op,e)">
            <org.eventb.theory.core.scRewriteRuleRHS name="AbelianGroup rhs" org.eventb.core.label="AbelianGroup rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.formula="Group(op,e)∧commutative(op)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="x" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.core.type="G"/>
        <org.eventb.theory.core.scMetavariable name="y" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.core.type="G"/>
        <org.eventb.theory.core.scRewriteRule name="Group.inverses" org.eventb.core.accurate="true" org.eventb.core.label="Group.inverses" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="inverses expansion" org.eventb.theory.core.formula="inverses(op,e,x,y)">
            <org.eventb.theory.core.scRewriteRuleRHS name="inverses rhs" org.eventb.core.label="inverses rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.formula="invertible(op,e)⇒op(x ↦ y)=e∧op(y ↦ x)=e"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
    <org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="inversesCommutative" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G,x⦂G,y⦂G·op∈G × G → G∧e∈G∧x∈G∧y∈G∧Group(op,e)⇒(inverses(op,e,x,y)⇔inverses(op,e,y,x))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#\/" org.eventb.theory.core.order="0"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="latinSquare" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G,x⦂G,y⦂G·op∈G × G → G∧e∈G∧x∈G∧y∈G∧Group(op,e)⇒(∃g⦂G·g∈G⇒op(x ↦ g)=y∧(∀g2⦂G·g2∈G∧op(x ↦ g2)=y⇒g=g2))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#0" org.eventb.theory.core.order="1"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="leftCancellation" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G·op∈G × G → G∧e∈G∧Group(op,e)⇒(∀a⦂G,b⦂G,c⦂G·a∈G∧b∈G∧c∈G⇒(op(a ↦ b)=op(a ↦ c)⇔b=c))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#3" org.eventb.theory.core.order="2"/>
    <org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="rightCancellation" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G·op∈G × G → G∧e∈G∧Group(op,e)⇒(∀a⦂G,b⦂G,c⦂G·a∈G∧b∈G∧c∈G⇒(op(b ↦ a)=op(c ↦ a)⇔b=c))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#4" org.eventb.theory.core.order="3"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="inverseEqn" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G·op∈G × G → G∧e∈G∧Group(op,e)⇒(∀x⦂G,y⦂G·x∈G∧y∈G⇒(op(x ↦ y)=e⇔inverses(op,e,x,y)))" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#5" org.eventb.theory.core.order="4"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="zeroInverse" org.eventb.core.predicate="∀op⦂ℙ(G×G×G),e⦂G·op∈G × G → G∧e∈G∧invertible(op,e)∧neutral(op,e)⇒inverses(op,e,e,e)" org.eventb.core.source="/SimpleDEq/Group.tuf|org.eventb.theory.core.theoryRoot#Group|org.eventb.theory.core.theorem#7" org.eventb.theory.core.order="5"/>
</org.eventb.theory.core.scTheoryRoot>
