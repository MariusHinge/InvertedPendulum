<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="58eac2280c2cb9539715655231ddea1f" org.eventb.theory.core.outdated="false">
    <org.eventb.theory.core.useTheory name="Piecewise" org.eventb.core.scTarget="/SimpleDEq/Piecewise.dtf|org.eventb.theory.core.deployedTheoryRoot#Piecewise"/>
    <org.eventb.theory.core.scTypeParameter name="E" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(E)"/>
    <org.eventb.theory.core.scTypeParameter name="F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.typeParameter#*" org.eventb.core.type="ℙ(F)"/>
    <org.eventb.theory.core.scTypeParameter name="STATES" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.typeParameter#:" org.eventb.core.type="ℙ(STATES)"/>
    <org.eventb.theory.core.scTypeParameter name="UF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.typeParameter#D" org.eventb.core.type="ℙ(UF)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="DE" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="F"/>
        <org.eventb.theory.core.scDatatypeConstructor name="ode" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#'">
            <org.eventb.theory.core.scConstructorArgument name="fun" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#'|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(RReal×F×F)"/>
            <org.eventb.theory.core.scConstructorArgument name="initial" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#'|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="F"/>
            <org.eventb.theory.core.scConstructorArgument name="initialArg" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#'|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="RReal"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="aode" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)">
            <org.eventb.theory.core.scConstructorArgument name="afun" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(F×F)"/>
            <org.eventb.theory.core.scConstructorArgument name="ainit" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="F"/>
            <org.eventb.theory.core.scConstructorArgument name="ainitArg" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="RReal"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scDatatypeDefinition name="CDE" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="F"/>
        <org.eventb.theory.core.scTypeArgument name="UF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="UF"/>
        <org.eventb.theory.core.scDatatypeConstructor name="code" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#(">
            <org.eventb.theory.core.scConstructorArgument name="cfun" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#(|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(RReal×F×UF×F)"/>
            <org.eventb.theory.core.scConstructorArgument name="cinit" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#(|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="F"/>
            <org.eventb.theory.core.scConstructorArgument name="cinitArg" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#(|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="RReal"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="caode" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#*">
            <org.eventb.theory.core.scConstructorArgument name="cafun" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(F×UF×F)"/>
            <org.eventb.theory.core.scConstructorArgument name="cainit" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="F"/>
            <org.eventb.theory.core.scConstructorArgument name="cainitArg" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.datatypeDefinition#C|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="RReal"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATET" org.eventb.core.label="autonomousToODE" org.eventb.core.predicate="∃f⦂ℙ(F×F),i⦂F,ia⦂RReal·f∈F ⇸ F∧i∈F∧ia∈(RReal ⦂ ℙ(RReal))∧e=aode(f,i,ia)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="(∀t_⦂RReal,eta_⦂F·((t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e)))∨¬t_∈(RReal ⦂ ℙ(RReal))∨¬eta_∈F∨((∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧¬eta_∈dom(afun(e))))∧(t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e))⇒(∃afun0⦂ℙ(F×F),ainit1⦂F,ainitArg2⦂RReal·e=aode(afun0,ainit1,ainitArg2))∧eta_∈dom(afun(e))∧afun(e)∈F ⇸ F))∧(∃fun0⦂ℙ(RReal×F×F),initial1⦂F,initialArg2⦂RReal·e=ode(fun0,initial1,initialArg2))">
        <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e)) ∣ afun(e)(eta_),initial(e),initialArg(e))"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEU" org.eventb.core.label="solutionOf" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(eta)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="eq">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=partialComp(fu,eta)∧eta(initArg)=init"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=fu∘eta∧eta(initArg)=init"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEV" org.eventb.core.label="CauchyLipschitzCondition" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(F)"/>
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="eq">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(DR × DF,F)∧(∀t0⦂RReal·t0∈DR⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(F,F)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEW" org.eventb.core.label="PiecewiseCauchyLipschitzCondition" org.eventb.core.predicate="DRs≠(∅ ⦂ ℙ(ℙ(RReal)))∧(∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal)·DR1∈DRs∧DR2∈DRs∧DR1≠DR2⇒DR1∩DR2=(∅ ⦂ ℙ(RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="DRs" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℙ(RReal))"/>
        <org.eventb.theory.core.scOperatorArgument name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(F)"/>
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="," org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#," org.eventb.theory.core.inductiveArgument="eq">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="ode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧partialPiecewiseContinuous(DRs,DF,DF,fu)∧(∀t0⦂RReal·t0∈union(DRs)⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="aode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7|org.eventb.theory.core.recursiveOperatorDefinition#,|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧fu∈C0(F,F)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEX" org.eventb.core.label="Solvable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq))∨(∀x⦂ℙ(RReal×F)·¬x∈(RReal ⦂ ℙ(RReal)) ⇸ F∨¬DR⊆dom(x)∨¬solutionOf(DR,x,eq))">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEY" org.eventb.core.label="AppendSolutionBAP" org.eventb.core.predicate="A∈ℙ(DR)∧B∈ℙ(DR)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧(A∩B=(∅ ⦂ ℙ(RReal))∧Solvable(B,eq)∧DR⊆dom(eta))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq))∨¬DR⊆dom(etap)∨¬A ◁ etap=A ◁ eta∨¬solutionOf(B,B ◁ etap,eq)">
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="A" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="B" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.operatorArgument#," org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATEZ" org.eventb.core.label="CBAP" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Pred∈ℙ(((RRealPlus ⦂ ℙ(RReal)) ⇸ F) × ((RRealPlus ⦂ ℙ(RReal)) ⇸ F))∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨¬t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred)∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
        <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#\/" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="Pred" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#+" org.eventb.core.type="ℙ(ℙ(RReal×F)×ℙ(RReal×F))"/>
        <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.operatorArgument#0" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="." org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9|org.eventb.theory.core.directOperatorDefinition#." org.eventb.theory.core.formula="t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE[" org.eventb.core.label="CBAPsolutionOf" org.eventb.core.predicate="t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧(Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap)∧Solvable(Closed2Closed(t,tp),eq)∧t ↦ tp∈(lt ⦂ ℙ(RReal×RReal)))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧eta(t)=etap(t)∧(∀t_⦂RReal·((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬t_∈Closed2Closed(t,tp))∨(t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ etap(t_)∈Inv)))∨((∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧(∀t0⦂RReal·((Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∨¬(Rzero ⦂ RReal) ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ t∈(lt ⦂ ℙ(RReal×RReal)))∧¬Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap)∨((∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧¬solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq))∨(t∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬eta(t)=etap(t))∨(∃t_⦂RReal·(∀t0⦂RReal·(t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∧t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∨¬t ↦ t0∈(leq ⦂ ℙ(RReal×RReal))∨¬t0 ↦ tp∈(leq ⦂ ℙ(RReal×RReal)))∧t_∈Closed2Closed(t,tp)∧t_∈dom(etap)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ etap(t_)∈Inv)">
        <org.eventb.theory.core.scOperatorArgument name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scOperatorArgument name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element1" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element2" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element3" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element4" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.operatorArgument#element5" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="element7" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;|org.eventb.theory.core.directOperatorDefinition#element7" org.eventb.theory.core.formula="Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE\" org.eventb.core.label="VerifiesOn" org.eventb.core.predicate="eta∈(RReal ⦂ ℙ(RReal)) → F" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧t_ ↦ eta(t_)∈Inv))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(eta)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧¬t_ ↦ eta(t_)∈Inv)">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scOperatorArgument name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∀t_⦂RReal·t_∈DR⇒t_ ↦ eta(t_)∈Inv"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE]" org.eventb.core.label="withControl" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="DE(F)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="CDE(F,UF)"/>
        <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(RReal×UF)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+" org.eventb.theory.core.inductiveArgument="ce">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="code(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧t_ ↦ eta_ ↦ u(t_)∈dom(fu) ∣ fu(t_ ↦ eta_ ↦ u(t_)),init,initArg)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="caode(fu,init,initArg)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E|org.eventb.theory.core.recursiveOperatorDefinition#+|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧eta_ ↦ u(t_)∈dom(fu) ∣ fu(eta_ ↦ u(t_)),init,initArg)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE^" org.eventb.core.label="Controllable" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u)))">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="CDE(F,UF)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE_" org.eventb.core.label="ControllableOn" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·¬t_∈DR∨(t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧u(t_)∈DU)))∨(∀u⦂ℙ(RReal×UF)·¬u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∨¬DR⊆dom(u)∨¬Solvable(DR,withControl(DR,ce,u))∨(∃t_⦂RReal·t_∈DR∧t_∈dom(u)∧u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧¬u(t_)∈DU))">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="DU" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="ℙ(UF)"/>
        <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="CDE(F,UF)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="*" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H|org.eventb.theory.core.directOperatorDefinition#*" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·t_∈DR⇒u(t_)∈DU)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="STATE`" org.eventb.core.label="SolvableWith" org.eventb.core.predicate="u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scOperatorArgument name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="CDE(F,UF)"/>
        <org.eventb.theory.core.scOperatorArgument name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(RReal×UF)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="+" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I|org.eventb.theory.core.directOperatorDefinition#+" org.eventb.theory.core.formula="Solvable(DR,withControl(DR,ce,u))"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scTheorem name="generatedBlocl" org.eventb.core.label="solutionDer" org.eventb.core.predicate="∀fu⦂ℙ(RReal×F×F),DR⦂ℙ(RReal),DF⦂ℙ(F),init⦂F,initArg⦂RReal,eta⦂ℙ(RReal×F),k⦂ℤ·DR⊆(RReal ⦂ ℙ(RReal))∧DF⊆F∧fu∈DR × DF → F∧k∈ℕ∧k&gt;0∧(∀x0⦂F·x0∈DF⇒partial1(fu,x0)∈Dn(k,DR,F))∧init∈DF∧initArg∈DR∧eta∈DR → F∧solutionOf(DR,eta,ode(fu,init,initArg))⇒eta∈Dn(k+1,DR,F)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#." org.eventb.theory.core.order="0"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocm" org.eventb.core.label="CauchyLipschitz" org.eventb.core.predicate="∀eq⦂DE(F),DR⦂ℙ(RReal),DF⦂ℙ(F)·DR⊆(RReal ⦂ ℙ(RReal))∧DF⊆F∧eq∈DE(F)∧CauchyLipschitzCondition(DR,DF,eq)⇒Solvable(DR,eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#-" org.eventb.theory.core.order="1"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocn" org.eventb.core.label="concatSolutions" org.eventb.core.predicate="∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal),eta1⦂ℙ(RReal×F),eta2⦂ℙ(RReal×F),eq⦂DE(F)·DR1⊆(RReal ⦂ ℙ(RReal))∧DR2⊆(RReal ⦂ ℙ(RReal))∧DR1∩DR2=(∅ ⦂ ℙ(RReal))∧eta1∈DR1 → F∧eta2∈DR2 → F∧eq∈DE(F)∧solutionOf(DR1,eta1,eq)∧solutionOf(DR2,eta2,eq)⇒solutionOf(DR1∪DR2,eta1∪eta2,eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#3" org.eventb.theory.core.order="2"/>
    <org.eventb.theory.core.scTheorem name="generatedBloco" org.eventb.core.label="appendSolutionExistence" org.eventb.core.predicate="∀DR⦂ℙ(RReal),A⦂ℙ(RReal),B⦂ℙ(RReal),eq⦂DE(F),eta⦂ℙ(RReal×F)·DR⊆(RReal ⦂ ℙ(RReal))∧A⊆DR∧B⊆DR∧A∩B=(∅ ⦂ ℙ(RReal))∧A∪B=DR∧eq∈DE(F)∧Solvable(B,eq)∧eta∈DR → F⇒(∃etap⦂ℙ(RReal×F)·etap∈DR → F∧AppendSolutionBAP(eq,DR,A,B,eta,etap))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#5" org.eventb.theory.core.order="3"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocp" org.eventb.core.label="concatSolvable" org.eventb.core.predicate="∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal),eq⦂DE(F)·DR1⊆(RReal ⦂ ℙ(RReal))∧DR2⊆(RReal ⦂ ℙ(RReal))∧DR1∩DR2=(∅ ⦂ ℙ(RReal))∧eq∈DE(F)∧Solvable(DR1,eq)∧Solvable(DR2,eq)⇒Solvable(DR1∪DR2,eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#6" org.eventb.theory.core.order="4"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocq" org.eventb.core.label="PiecewiseCauchyLipschitz" org.eventb.core.predicate="∀eq⦂DE(F),DRs⦂ℙ(ℙ(RReal)),DF⦂ℙ(F)·DRs⊆ℙ(RReal ⦂ ℙ(RReal))∧DRs≠(∅ ⦂ ℙ(ℙ(RReal)))∧(∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal)·DR1∈DRs∧DR2∈DRs∧DR1≠DR2⇒DR1∩DR2=(∅ ⦂ ℙ(RReal)))∧DF⊆F∧eq∈DE(F)∧PiecewiseCauchyLipschitzCondition(DRs,DF,eq)⇒Solvable(union(DRs),eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#8" org.eventb.theory.core.order="5"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocr" org.eventb.core.label="solution_restriction" org.eventb.core.predicate="∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal),eq⦂DE(F),eta⦂ℙ(RReal×F)·DR1⊆(RReal ⦂ ℙ(RReal))∧DR2⊆DR1∧eq∈DE(F)∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧solutionOf(DR1,eta,eq)⇒solutionOf(DR2,eta,eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#?" org.eventb.theory.core.order="6"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocs" org.eventb.core.label="solvable_restriction" org.eventb.core.predicate="∀DR1⦂ℙ(RReal),DR2⦂ℙ(RReal),eq⦂DE(F)·DR1⊆(RReal ⦂ ℙ(RReal))∧DR2⊆DR1∧eq∈DE(F)∧Solvable(DR1,eq)⇒Solvable(DR2,eq)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#A" org.eventb.theory.core.order="7"/>
    <org.eventb.theory.core.scTheorem name="generatedBloct" org.eventb.core.label="CBAPsolutionOf_FIS" org.eventb.core.predicate="∀t⦂RReal,eta⦂ℙ(RReal×F),eq⦂DE(F),Inv⦂ℙ(RReal×F),tp0⦂RReal·t∈(RRealPlus ⦂ ℙ(RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧tp0∈(RRealPlus ⦂ ℙ(RReal))∧t ↦ tp0∈(lt ⦂ ℙ(RReal×RReal))∧eq∈DE(F)∧Inv∈ℙ((RRealPlus ⦂ ℙ(RReal)) × F)∧Solvable(Closed2Infinity(t),eq)∧(∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Closed2Closed(t,tp0)⊆dom(x)∧solutionOf(Closed2Closed(t,tp0),x,eq)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp0)⇒t_ ↦ x(t_)∈Inv))⇒(∃tp⦂RReal,etap⦂ℙ(RReal×F)·tp∈(RRealPlus ⦂ ℙ(RReal))∧t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧tp ↦ tp0∈(leq ⦂ ℙ(RReal×RReal))∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap)∧Solvable(Closed2Closed(t,tp),eq)∧CBAPsolutionOf(t,tp,eta,etap,eq,Inv))" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#@" org.eventb.theory.core.order="8"/>
    <org.eventb.theory.core.scTheorem name="generatedBlocu" org.eventb.core.label="CBAPsolutionOf_INV" org.eventb.core.predicate="∀t⦂RReal,tp⦂RReal,eta⦂ℙ(RReal×F),etap⦂ℙ(RReal×F),eq⦂DE(F),Inv⦂ℙ(RReal×F)·t∈(RRealPlus ⦂ ℙ(RReal))∧tp∈(RRealPlus ⦂ ℙ(RReal))∧t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧eta∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Closed2Closed(Rzero ⦂ RReal,t)⊆dom(eta)∧etap∈(RReal ⦂ ℙ(RReal)) ⇸ F∧Closed2Closed(Rzero ⦂ RReal,tp)⊆dom(etap)∧eq∈DE(F)∧Inv⊆(RRealPlus ⦂ ℙ(RReal)) × F∧Solvable(Closed2Closed(t,tp),eq)∧(∀t_⦂RReal·t_∈Closed2Closed(Rzero ⦂ RReal,t)⇒t_ ↦ eta(t_)∈Inv)∧CBAPsolutionOf(t,tp,eta,etap,eq,Inv)⇒(∀t_⦂RReal·t_∈Closed2Closed(Rzero ⦂ RReal,tp)⇒t_ ↦ etap(t_)∈Inv)" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.theorem#J" org.eventb.theory.core.order="9"/>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G">
        <org.eventb.theory.core.scMetavariable name="e" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scMetavariable name="DR" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scMetavariable name="eta" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scMetavariable name="eq" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="DE(F)"/>
        <org.eventb.theory.core.scMetavariable name="fu" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(RReal×F×F)"/>
        <org.eventb.theory.core.scMetavariable name="init" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="F"/>
        <org.eventb.theory.core.scMetavariable name="initArg" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scMetavariable name="fu_" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(F×F)"/>
        <org.eventb.theory.core.scMetavariable name="DF" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.core.type="ℙ(F)"/>
        <org.eventb.theory.core.scMetavariable name="DRs" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.core.type="ℙ(ℙ(RReal))"/>
        <org.eventb.theory.core.scMetavariable name="A" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scMetavariable name="B" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.core.type="ℙ(RReal)"/>
        <org.eventb.theory.core.scMetavariable name="etap" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scMetavariable name="t" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scMetavariable name="tp" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.core.type="RReal"/>
        <org.eventb.theory.core.scMetavariable name="Pred" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.core.type="ℙ(ℙ(RReal×F)×ℙ(RReal×F))"/>
        <org.eventb.theory.core.scMetavariable name="Inv" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.core.type="ℙ(RReal×F)"/>
        <org.eventb.theory.core.scMetavariable name="ce" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.core.type="CDE(F,UF)"/>
        <org.eventb.theory.core.scMetavariable name="u" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.core.type="ℙ(RReal×UF)"/>
        <org.eventb.theory.core.scMetavariable name="fu__" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.core.type="ℙ(RReal×F×UF×F)"/>
        <org.eventb.theory.core.scMetavariable name="fu___" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.core.type="ℙ(F×UF×F)"/>
        <org.eventb.theory.core.scMetavariable name="DU" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.core.type="ℙ(UF)"/>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.autonomousToODE" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.autonomousToODE" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="autonomousToODE expansion" org.eventb.theory.core.formula="autonomousToODE(e)">
            <org.eventb.theory.core.scRewriteRuleRHS name="autonomousToODE rhs" org.eventb.core.label="autonomousToODE rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#G" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈(RReal ⦂ ℙ(RReal))∧eta_∈F∧eta_∈dom(afun(e)) ∣ afun(e)(eta_),initial(e),initialArg(e))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.solutionOf case 0" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.solutionOf case 0" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="solutionOf expansion" org.eventb.theory.core.formula="solutionOf(DR,eta,ode(fu,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="solutionOf rhs" org.eventb.core.label="solutionOf rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=partialComp(fu,eta)∧eta(initArg)=init"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.solutionOf case 1" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.solutionOf case 1" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="solutionOf expansion" org.eventb.theory.core.formula="solutionOf(DR,eta,aode(fu_,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="solutionOf rhs" org.eventb.core.label="solutionOf rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="init∈F∧initArg∈DR∧eta∈D1(DR,F)∧Der(DR,F,eta)=fu_∘eta∧eta(initArg)=init"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.CauchyLipschitzCondition case 0" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.CauchyLipschitzCondition case 0" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="CauchyLipschitzCondition expansion" org.eventb.theory.core.formula="CauchyLipschitzCondition(DR,DF,ode(fu,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="CauchyLipschitzCondition rhs" org.eventb.core.label="CauchyLipschitzCondition rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu∈C0(DR × DF,F)∧(∀t0⦂RReal·t0∈DR⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.CauchyLipschitzCondition case 1" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.CauchyLipschitzCondition case 1" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="CauchyLipschitzCondition expansion" org.eventb.theory.core.formula="CauchyLipschitzCondition(DR,DF,aode(fu_,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="CauchyLipschitzCondition rhs" org.eventb.core.label="CauchyLipschitzCondition rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#1" org.eventb.theory.core.formula="init∈DF∧initArg∈DR∧fu_∈C0(F,F)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.PiecewiseCauchyLipschitzCondition case 0" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.PiecewiseCauchyLipschitzCondition case 0" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="PiecewiseCauchyLipschitzCondition expansion" org.eventb.theory.core.formula="PiecewiseCauchyLipschitzCondition(DRs,DF,ode(fu,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="PiecewiseCauchyLipschitzCondition rhs" org.eventb.core.label="PiecewiseCauchyLipschitzCondition rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧partialPiecewiseContinuous(DRs,DF,DF,fu)∧(∀t0⦂RReal·t0∈union(DRs)⇒lipschitzContinuous(DF,F,partial2(fu,t0)))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.PiecewiseCauchyLipschitzCondition case 1" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.PiecewiseCauchyLipschitzCondition case 1" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="PiecewiseCauchyLipschitzCondition expansion" org.eventb.theory.core.formula="PiecewiseCauchyLipschitzCondition(DRs,DF,aode(fu_,init,initArg))">
            <org.eventb.theory.core.scRewriteRuleRHS name="PiecewiseCauchyLipschitzCondition rhs" org.eventb.core.label="PiecewiseCauchyLipschitzCondition rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#7" org.eventb.theory.core.formula="init∈DF∧initArg∈union(DRs)∧fu_∈C0(F,F)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.Solvable" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.Solvable" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Solvable expansion" org.eventb.theory.core.formula="Solvable(DR,eq)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Solvable rhs" org.eventb.core.label="Solvable rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#2" org.eventb.theory.core.formula="∃x⦂ℙ(RReal×F)·x∈(RReal ⦂ ℙ(RReal)) ⇸ F∧DR⊆dom(x)∧solutionOf(DR,x,eq)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.AppendSolutionBAP" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.AppendSolutionBAP" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="AppendSolutionBAP expansion" org.eventb.theory.core.formula="AppendSolutionBAP(eq,DR,A,B,eta,etap)">
            <org.eventb.theory.core.scRewriteRuleRHS name="AppendSolutionBAP rhs" org.eventb.core.label="AppendSolutionBAP rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#4" org.eventb.theory.core.formula="DR⊆dom(etap)∧A ◁ etap=A ◁ eta∧solutionOf(B,B ◁ etap,eq)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.CBAP" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.CBAP" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="CBAP expansion" org.eventb.theory.core.formula="CBAP(t,tp,eta,etap,Pred,Inv)">
            <org.eventb.theory.core.scRewriteRuleRHS name="CBAP rhs" org.eventb.core.label="CBAP rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#9" org.eventb.theory.core.formula="t ↦ tp∈(lt ⦂ ℙ(RReal×RReal))∧Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧Closed2Closed(t,tp) ◁ eta ↦ Closed2Closed(t,tp) ◁ etap∈Pred∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.CBAPsolutionOf" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.CBAPsolutionOf" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="CBAPsolutionOf expansion" org.eventb.theory.core.formula="CBAPsolutionOf(t,tp,eta,etap,eq,Inv)">
            <org.eventb.theory.core.scRewriteRuleRHS name="CBAPsolutionOf rhs" org.eventb.core.label="CBAPsolutionOf rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#;" org.eventb.theory.core.formula="Closed2Open(Rzero ⦂ RReal,t) ◁ eta=Closed2Open(Rzero ⦂ RReal,t) ◁ etap∧solutionOf(Closed2Closed(t,tp),Closed2Closed(t,tp) ◁ etap,eq)∧eta(t)=etap(t)∧(∀t_⦂RReal·t_∈Closed2Closed(t,tp)⇒t_ ↦ etap(t_)∈Inv)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.VerifiesOn" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.VerifiesOn" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="VerifiesOn expansion" org.eventb.theory.core.formula="VerifiesOn(DR,eta,Inv)">
            <org.eventb.theory.core.scRewriteRuleRHS name="VerifiesOn rhs" org.eventb.core.label="VerifiesOn rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#&gt;" org.eventb.theory.core.formula="∀t_⦂RReal·t_∈DR⇒t_ ↦ eta(t_)∈Inv"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.withControl case 0" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.withControl case 0" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="withControl expansion" org.eventb.theory.core.formula="withControl(DR,code(fu__,init,initArg),u)">
            <org.eventb.theory.core.scRewriteRuleRHS name="withControl rhs" org.eventb.core.label="withControl rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧t_ ↦ eta_ ↦ u(t_)∈dom(fu__) ∣ fu__(t_ ↦ eta_ ↦ u(t_)),init,initArg)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.withControl case 1" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.withControl case 1" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="withControl expansion" org.eventb.theory.core.formula="withControl(DR,caode(fu___,init,initArg),u)">
            <org.eventb.theory.core.scRewriteRuleRHS name="withControl rhs" org.eventb.core.label="withControl rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#E" org.eventb.theory.core.formula="ode(λt_⦂RReal ↦ eta_⦂F·t_∈dom(u)∧eta_ ↦ u(t_)∈dom(fu___) ∣ fu___(eta_ ↦ u(t_)),init,initArg)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.Controllable" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.Controllable" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Controllable expansion" org.eventb.theory.core.formula="Controllable(DR,ce)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Controllable rhs" org.eventb.core.label="Controllable rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#F" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.ControllableOn" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.ControllableOn" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="ControllableOn expansion" org.eventb.theory.core.formula="ControllableOn(DR,DU,ce)">
            <org.eventb.theory.core.scRewriteRuleRHS name="ControllableOn rhs" org.eventb.core.label="ControllableOn rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#H" org.eventb.theory.core.formula="∃u⦂ℙ(RReal×UF)·u∈(RReal ⦂ ℙ(RReal)) ⇸ UF∧DR⊆dom(u)∧Solvable(DR,withControl(DR,ce,u))∧(∀t_⦂RReal·t_∈DR⇒u(t_)∈DU)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="DiffEq.SolvableWith" org.eventb.core.accurate="true" org.eventb.core.label="DiffEq.SolvableWith" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="SolvableWith expansion" org.eventb.theory.core.formula="SolvableWith(DR,ce,u)">
            <org.eventb.theory.core.scRewriteRuleRHS name="SolvableWith rhs" org.eventb.core.label="SolvableWith rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/SimpleDEq/DiffEq.tuf|org.eventb.theory.core.theoryRoot#DiffEq|org.eventb.theory.core.newOperatorDefinition#I" org.eventb.theory.core.formula="Solvable(DR,withControl(DR,ce,u))"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
